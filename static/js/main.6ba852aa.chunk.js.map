{"version":3,"sources":["app/reducers/userSlice.js","components/Header/AdminHeader.jsx","components/Header/PublicHeader.jsx","components/Header/UserHeader.jsx","components/Header/Header.jsx","components/ProtectedRoute/ProtectedRoute.jsx","components/Editor/Control.jsx","components/Loading/Loading.jsx","components/Unauthorized/Unauthorized.jsx","components/Editor/Editor.jsx","pages/admin/UserRoles/UserRolesEdit.jsx","components/List/FilterItem.jsx","components/DeleteModal/DeleteModal.jsx","components/List/RowItem.jsx","components/List/Row.jsx","components/List/Table.jsx","components/List/FilteredList.jsx","pages/admin/UserRoles/UserRolesList.jsx","components/List/ConnectBase.jsx","pages/admin/Users/UsersList.jsx","pages/public/Home/Home.jsx","app/utils.js","pages/public/Login/ForgottenPassword.jsx","pages/public/Login/PasswordComponent.jsx","pages/public/Login/ForgottenPasswordReset.jsx","app/hooks.js","pages/public/Login/utils.js","pages/public/Login/Login.jsx","pages/public/Login/PassportCallback.jsx","pages/public/Login/Register.jsx","pages/public/Login/VerifyUser.jsx","pages/user/UserDashboard/UserDashboard.jsx","pages/public/Posts/Posts.jsx","App.jsx","app/store.js","serviceWorker.js","app/refreshToken.js","app/apolloClient.js","index.js"],"names":["initialState","user","token","localStorage","getItem","email","id","roles","split","map","role","name","verified","Boolean","userFromStorage","state","userSlice","createSlice","reducers","changeState","action","payload","login","userToken","setItem","refreshToken","toString","r","logout","removeItem","selectUser","actions","UserHeader","onLogout","className","Dropdown","Toggle","variant","Menu","Item","href","to","onClick","PublicHeader","Header","useSelector","dispatch","useDispatch","find","AdminHeader","ProtectRoute","path","exact","children","Control","storedData","label","required","register","placeholder","formState","setValue","errors","error","useEffect","Fragment","Form","Group","controlId","Label","type","isInvalid","FormControl","Feedback","Loading","what","Unauthorized","where","Alert","getDataFromRaw","rawData","Object","keys","Editor","form","renameError","onUpdated","updateCache","query","useState","undefined","localId","setLocalId","unauthorized","setUnauthorized","setErrors","setStoredData","handleError","incommingError","incomingErrors","message","onCompleted","raw","data","skipLoading","loading","useQuery","QUERY","variables","skip","loadedDataRaw","loadedData","updateDataFromLoaded","onError","e","useMutation","CREATE_MUTATION","errorPolicy","update","createProjectMutation","UPDATE_MUTATION","updateProjectMutation","onSubmit","useCallback","userId","UserRoleForm","reactForm","userRoleId","graphQlError","useForm","handleSubmit","Button","UserRoleEdit","useParams","fields","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","onChange","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","string","filter","setFilter","doFilter","f","processFilter","field","option","text","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","title","getOwnPropertyNames","value","target","DeleteModal","show","onHide","onDelete","modelName","deleteObject","deleting","Modal","closeButton","Title","Body","Footer","disabled","ListRowItem","item","fieldDesc","names","element","getElementFromField","component","substr","length","push","reduce","p","ListRow","showDelete","onEdit","getEditLink","doEdit","editLink","useMemo","toLowerCase","tabIndex","onKeyPress","size","Table","adminMode","queries","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setData","setError","ADMIN_LIST_QUERY","USER_LIST_QUERY","d","dataFields","userRefetch","refetch","DELETE_MUTATION","onHideDidaloDelete","deleteProjectMutation","obj","responsive","projectItem","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","staticFilter","onCreate","history","useHistory","createDefaultFilter","defaultFilter","user_every","filterDestructed","console","log","onFilterChange","UserRoleList","ConnectBase","gql","elementTitle","setTitle","iraw","final","checked","indexOf","ADD","addMutation","REMOVE","removeMutation","updated","updateTitle","id1","id2","onChecked","Check","QUERY_ALL_USERS_ADMIN","USER_ROLE_QUERY","MUTATION_ADD_USER_ROLE_TO_USER","MUTATION_REMOVE_USER_ROLE_FROM_USER","MUTATION_REMOVE_USER","ConnectRole","UsersList","Home","getGraphqlMonsterClientAppRoot","process","isEmailValid","RegExp","test","passwordStrong","password","valid","strong","capital","lower","number","percentage","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","setEmail","invalidEmail","setInvalidEmail","emailSent","setEmailSent","doForgottenPassword","onRequestSend","a","method","event","Text","PasswordComponent","onPasswordChange","strongPassword","ProgressBar","now","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","match","_","get","setPassword","copy","setCopy","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","setInvalidPass","setStrong","invalidCopy","setInvalidCopy","doCheck","onReset","reset","replace","check","status","pass","isPasswordValid","c","useAppDispatch","LOGIN_QL","Login","setPass","invalidPass","URLSearchParams","location","search","loginMutation","onLogin","login_v1","onBackClick","goBack","tokenFromFacebookCode","code","axios","PassportCallback","useLocation","codeRaw","showError","errorMessage","setTimeout","response","JSON","parse","request","REGISTER_MUTATION","Register","registerMutation","emailProbablyTaken","setEmailProbablyTaken","onRegister","register_v1","VERIFY_EMAIL_MUTATION","VerifyUser","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","previouslyVerified","onVerifyUser","UserDashboard","ALL_POST_QUERY","PostItem","post","style","backgroundColor","color","Posts","posts","setPosts","newPostTitle","setNewPostTitle","newPostColor","setNewPostColor","createPost","allPost","orderBy","rows","newPost","defaultValue","currentPost","index","App","ProtectedRoute","ForgottenPasswordReset","UserRolesList","store","configureStore","reducer","userReducer","window","hostname","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","refreshTokenAction","forward","forward$","fromPromise","Promise","resolve","then","refreshToken_v1","callback","oldHeaders","getContext","headers","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","some","tokenExpired","locations","apolloClient","ApolloClient","link","ApolloLink","from","cache","InMemoryCache","defaultOptions","watchQuery","mutate","ReactDOM","render","StrictMode","ApolloProvider","client","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAwCMA,EAAe,CACnBC,KAnBsB,WAAO,IAAD,EACtBC,EAAQC,aAAaC,QAAQ,cACnC,GAAKF,EAIL,MAAO,CACLA,QACAG,MAAOF,aAAaC,QAAQ,cAC5BE,GAAIH,aAAaC,QAAQ,WACzBG,MAAK,UAAEJ,aACJC,QAAQ,qBADN,aAAE,EAEHI,MAAM,KACPC,KAAI,SAACC,GAAD,MAAW,CAAEC,KAAMD,MAC1BE,SAAUC,QAAQV,aAAaC,QAAQ,mBAKnCU,GACNC,MAAO,WAGIC,EAAYC,YAAY,CACnCN,KAAM,OACNX,eACAkB,SAAU,CACRC,YAAa,SAACJ,EAAOK,GACnBL,EAAMA,MAAQK,EAAOC,SAEvBC,MAJQ,SAIFP,EAAOK,GAhDK,IAACG,IAiDHH,EAAOC,QAhDzBlB,aAAaqB,QAAQ,aAAcD,EAAUrB,OAC7CC,aAAaqB,QAAQ,oBAAqBD,EAAUE,cACpDtB,aAAaqB,QAAQ,UAAWD,EAAUtB,KAAKK,IAC/CH,aAAaqB,QAAQ,aAAcD,EAAUtB,KAAKI,OAClDF,aAAaqB,QAAQ,gBAAiBX,QAAQU,EAAUtB,KAAKW,UAAUc,YACvEvB,aAAaqB,QAAQ,aAAcD,EAAUtB,KAAKM,MAAME,KAAI,SAACkB,GAAD,OAAOA,EAAEhB,QAAMe,YA4CvEX,EAAMd,KAAO,CACXK,GAAIc,EAAOC,QAAQpB,KAAKK,GACxBJ,MAAOkB,EAAOC,QAAQnB,MACtBG,MAAOe,EAAOC,QAAQpB,KAAKI,MAC3BE,MAAOa,EAAOC,QAAQpB,KAAKM,MAC3BK,SAAUC,QAAQO,EAAOC,QAAQpB,KAAKW,YAG1CgB,OAdQ,SAcDb,GAhDTZ,aAAa0B,WAAW,qBACxB1B,aAAa0B,WAAW,cACxB1B,aAAa0B,WAAW,WAExB1B,aAAa0B,WAAW,iBACxB1B,aAAa0B,WAAW,qBA6Cbd,EAAMd,SAKN6B,EAAa,SAACf,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOd,YAAlB,aAAW,EAAaA,MAE3C,EAAuCe,EAAUe,QAAzCT,EAAR,EAAQA,MAAOM,EAAf,EAAeA,OAAQT,EAAvB,EAAuBA,YAEfH,IAAf,Q,uBCrBegB,EAhDI,SAAC,GAAD,EAAG/B,KAAH,IAASgC,EAAT,EAASA,SAAT,OAAyB,qBAAKC,UAAU,kDAAf,SAC1C,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,kBAIA,cAAC6B,EAAA,EAASG,KAAV,UACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,uBAKJ,eAACL,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,mBAIA,eAAC6B,EAAA,EAASG,KAAV,WACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,eAApB,mBACA,cAACL,EAAA,EAASI,KAAV,CAAeC,KAAK,eAApB,4BAKN,qBAAKN,UAAU,uBAAf,SACE,oFAIF,qBAAKA,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,kBAMA,eAAC6B,EAAA,EAASG,KAAV,WACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMC,GAAG,kBAAT,8BACxB,cAACN,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMN,UAAU,GAAGO,GAAG,IAAIC,QAAST,EAAnC,oCCbnBU,G,OA1Ba,kBAAO,qBAAKT,UAAU,kDAAf,SACjC,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,kBAIA,cAAC6B,EAAA,EAASG,KAAV,UACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,yBAIN,qBAAKN,UAAU,uBAAf,SACE,0DAIF,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMA,UAAU,GAAGO,GAAG,SAAtB,mBADF,OACiD,cAAC,IAAD,CAAMP,UAAU,GAAGO,GAAG,YAAtB,gCCYtCT,EAjCI,SAAC,GAAD,EAAG/B,KAAH,IAASgC,EAAT,EAASA,SAAT,OAAyB,qBAAKC,UAAU,kDAAf,SAC1C,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,kBAIA,cAAC6B,EAAA,EAASG,KAAV,UACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,yBAIN,qBAAKN,UAAU,uBAAf,SACE,kFAIF,qBAAKA,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,SAAS/B,GAAG,iBAArC,kBAIA,eAAC6B,EAAA,EAASG,KAAV,WACE,cAACH,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMC,GAAG,kBAAT,8BACxB,cAACN,EAAA,EAASI,KAAV,CAAeC,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMN,UAAU,GAAGO,GAAG,IAAIC,QAAST,EAAnC,oCCPnBW,EAhBO,WACpB,IAAM3C,EAAO4C,YAAYf,GACnBgB,EAAWC,cAEXd,EAAW,WACfa,EAASlB,MAGX,OAAI3B,GAAQA,EAAKC,MACXD,EAAKM,MAAMyC,MAAK,SAACrB,GAAD,MAAkB,UAAXA,EAAEhB,QAA0B,cAACsC,EAAD,CAAahD,KAAMA,EAAMgC,SAAUA,IAC9E,cAAC,EAAD,CAAYhC,KAAMA,EAAMgC,SAAUA,IAGzC,cAAC,EAAD,KCDMiB,EAda,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMzC,EAA4B,EAA5BA,KAAM0C,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxCpD,EAAO4C,YAAYf,GAEzB,OAAIpB,KAAQ,OAACT,QAAD,IAACA,OAAD,EAACA,EAAMM,MAAMyC,MAAK,SAAArB,GAAC,OAAIA,EAAEhB,OAASD,MAClC,cAAC,IAAD,CAAU+B,GAAE,sBAAiBU,EAAjB,iBAA8BzC,MAGlD,OAACT,QAAD,IAACA,OAAD,EAACA,EAAMC,OAIH,cAAC,IAAD,CAAOiD,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,IAHvC,cAAC,IAAD,CAAUZ,GAAE,sBAAiBU,M,4CCsB9BG,EAhCQ,SAAC,GAA4F,IAA1F3C,EAAyF,EAAzFA,KAAM4C,EAAmF,EAAnFA,WAAYC,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,SACrFC,EAAWF,EAAXE,OACFC,EAASD,GAAUA,EAAOnD,GAMhC,OAJAqD,qBAAU,WACJT,GAAcA,EAAW5C,IAAOkD,EAASlD,EAAM4C,EAAW5C,MAC7D,CAAC4C,EAAYM,EAAUlD,IAGxB,cAAC,IAAMsD,SAAP,UACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAS,eAAUzD,GAA/B,UACE,eAACuD,EAAA,EAAKG,MAAN,WAAab,EAAb,IAAqBC,GAAY,OACjC,cAACS,EAAA,EAAKZ,QAAN,yBACEgB,KAAK,OACLX,YAAaA,GACTD,EAAS/C,EAAM,CAAE8C,cAHvB,IAKEc,UAAWR,KAIb,cAACS,EAAA,EAAYC,SAAb,CAAsBH,KAAK,QAA3B,sBAGA,eAACJ,EAAA,EAAKZ,QAAQmB,SAAd,CAAuBH,KAAK,UAA5B,oCAC0Bd,EAD1B,a,yBCpBOkB,EAJQ,SAAC,GAAiB,IAAD,IAAfC,YAAe,MAAR,GAAQ,EACpC,OAAQ,gDAAiBA,EAAjB,W,SCGGC,EAJa,SAAC,GAAkB,IAAD,IAAhBC,aAAgB,MAAR,GAAQ,EAC1C,OAAQ,cAACC,EAAA,EAAD,CAAOzC,QAAS,SAAhB,gCAA2CwC,EAA3C,cCCCE,EAAiB,SAACC,GAE7B,OAAOA,EADSC,OAAOC,KAAKF,GAAS,KAyGxBG,EArGO,SAAC,GAAmF,IAAjFxE,EAAgF,EAAhFA,KAAYL,GAAoE,EAA1E8E,KAA0E,EAApE9E,IAAI+E,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOnC,EAAoB,EAApBA,SACnF,EAA8BoC,mBAAgB,WAAPnF,EAAkBA,OAAKoF,GAA9D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA4BL,mBAAS,IAArC,mBAAO3B,EAAP,KAAeiC,EAAf,KAEA,EAAoCN,mBAAS,IAA7C,mBAAOlC,EAAP,KAAmByC,EAAnB,KAEMC,EAAc,SAACC,GACnB,IAAIC,EAAiBD,EAAeE,QAAQ5F,MAAM,MAC9C6E,IACFc,EAAiBA,EAAe1F,KAAI,SAACsD,GAAD,OAAWsB,EAAYtB,OAE7DgC,EAAUI,IAiBNE,EAAc,SAACC,GACnB,IAAMC,EAAOxB,EAAeuB,GAC5BV,EAAWW,EAAKjG,IAChByF,EAAU,MACNT,GAAWA,EAAUgB,IAGrBE,GAAeb,EACbc,EAAYC,YAASlB,EAAMmB,MAAO,CACxCC,UAAW,CAAEtG,GAAIqF,GACjBkB,KAAML,EACNH,YAAa,SAACS,IAzBa,SAACA,GAC5B,GAAKA,EAAL,CAIA,IAAMC,EAAahC,EAAe+B,GAE9BC,EACFf,EAAc,eAAKe,IAEnBjB,GAAgB,IAgBhBkB,CAAqBF,IAEvBG,QAAS,SAACC,GACU,+BAAdA,EAAEd,SACJN,GAAgB,MARdW,QAaR,EAAgCU,YAAY3B,EAAM4B,gBAAiB,CACjEC,YAAa,OACbhB,YAAaA,EACbiB,OAAQ/B,EACR0B,QAAShB,IAJJsB,EAAP,oBAOA,EAAgCJ,YAAY3B,EAAMgC,gBAAiB,CACjEH,YAAa,OACbhB,YAAaA,EACbiB,OAAQ/B,EACR0B,QAAShB,IAJJwB,EAAP,oBAWMC,EAAWC,uBACf,SAACpB,GACKZ,GACFI,EAAU,MACV0B,EAAsB,CACpBb,UAAU,aACRtG,GAAIqF,GACDY,MAIPgB,EAAsB,CACpBX,UAAU,aACRgB,OAAQzH,aAAaC,QAAQ,YAC1BmG,OAKX,CAACZ,EAAS4B,EAAuBE,IAGnC,OAAI5B,EACK,cAAC,EAAD,CAAchB,MAAK,UAAKlE,EAAL,WAGxB8F,EACK,cAAC,EAAD,CAAS9B,KAAMhE,IAGjB,8BAAM0C,EAASE,EAAYmE,EAAU5D,MCpGxCsD,EAAe,y9BACfI,EAAe,qwCACfb,EAAK,24BAELkB,EAAe,SAAC,GAA6D,IAA3DtE,EAA0D,EAA1DA,WAAYmE,EAA8C,EAA9CA,SAC5BI,GAD0E,EAApCC,WAAoC,EAAxBC,aACtCC,eACVC,EAAiBJ,EAAjBI,aACR,OAAQ,eAAChE,EAAA,EAAD,CAAMwD,SAAUQ,EAAaR,GAA7B,UACN,cAAC,EAAD,aAAS/G,KAAM,OAAQ6C,MAAO,YAAaC,UAAU,EAAMF,WAAYA,GAAgBuE,IACvF,cAACK,EAAA,EAAD,CAAQ7D,KAAK,SAAb,sBAyBW8D,EArBa,SAAC7B,GAC3B,IAAQjG,EAAO+H,cAAP/H,GAER,OACE,mCACE,cAAC,EAAD,CACEA,GAAIA,EACJK,KAAM,WACN2H,OAAQ,CAAC,QACT9C,MAAO,CACL4B,kBACAI,kBACAb,SAPJ,SAUG,SAACpD,EAAYmE,EAAU5D,GAAvB,OAAkC,cAAC,EAAD,CAAcP,WAAYA,EAAYmE,SAAUA,EAAUM,aAAclE,EAAQiE,WAAYzH,U,mCChCjIiI,G,OAAmB,CACrBC,SAAU,WACVC,aAAc,eACdC,YAAa,cACbC,gBAAiB,kBACjBC,UAAW,YACXC,cAAe,gBACfC,QAAS,aAgFEC,EA7EW,SAAC,GAA0B,IAAxBT,EAAuB,EAAvBA,OAAQU,EAAe,EAAfA,SACjC,EAA0CvD,mBAAS6C,EAAO,IAA1D,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAA4CzD,mBAAS,YAArD,mBAAO0D,EAAP,KAAuBC,EAAvB,KACA,EAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KACA,EAA4B7D,WAAS8D,QAAS,EAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAkBMC,EAAW/B,uBAAY,SAACgC,GACtBH,IAAWG,IACXF,EAAUE,GACVX,EAASW,MAEd,CAACH,EAAQR,EAAUS,IAEhBG,EAAgBjC,uBAAY,SAACkC,EAAOC,EAAQC,GAC9C,GAAKA,GAAmB,YAAXD,EAAb,CAKA,IAAMH,EAAI,GACVA,EAAE,GAAD,OAAIE,EAAJ,YAAaC,IAAYC,EAC1BL,EAASC,QANLD,EAAS,QAQd,CAACA,IAEEM,EAAK,SAACC,GACR,IAAMC,EAAKD,EACX,OAAO,WArCW,IAACJ,EACnBX,EADmBW,EAsCDK,GApClBN,EAAcC,EAAOV,EAAgBE,KAwCnCc,EAAK,SAACF,GACR,IAAMC,EAAKD,EACX,OAAO,WAvCY,IAACH,EACpBV,EADoBU,EAuCUI,GArC9BN,EAAcX,EAAea,EAAQT,KAyCzC,OACI,eAACe,EAAA,EAAD,CAAYlI,UAAU,OAAtB,UACI,cAACmI,EAAA,EAAD,CACInI,UAAU,eACVoI,GAAIF,IAAWG,QACflI,QAAQ,UACRmI,MAAOvB,EACP3I,GAAG,yBALP,SAMKgI,EAAO7H,KAAI,SAACwJ,GAAD,OAAQ,cAAC9H,EAAA,EAASI,KAAV,CAAuBG,QAASsH,EAAGC,GAAnC,SAAwCA,EAAEvI,YAAtBuI,QAE5C,cAACI,EAAA,EAAD,CACInI,UAAU,gBACVoI,GAAIF,IAAWG,QACflI,QAAQ,eACRmI,MAAOjC,EAAiBY,GACxB7I,GAAG,yBALP,SAMK2E,OAAOwF,oBAAoBlC,GAAkB9H,KAAI,SAACwJ,GAAD,OAAQ,cAAC9H,EAAA,EAASI,KAAV,CAAuBG,QAASyH,EAAGF,GAAnC,SAAwC1B,EAAiB0B,IAArCA,QAElF,cAAC/F,EAAA,EAAKZ,QAAN,CAAcoH,MAAOrB,EAAYL,SAxDlB,SAAC9B,GACpB,IAAM6C,EAAO7C,EAAEyD,OAAOD,MACtBpB,EAAcS,GACdH,EAAcX,EAAeE,EAAgBY,U,kBCctCa,EA3CY,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAO7E,OACE,8BACE,eAACC,EAAA,EAAD,CAAON,KAAMA,EAAMC,OAAQA,EAA3B,UACE,cAACK,EAAA,EAAMvI,OAAP,CAAcwI,aAAW,EAAzB,SACE,8BACE,eAACD,EAAA,EAAME,MAAP,qBACU,KADV,IACiBJ,GAAgBA,EAAatK,KAD9C,IACqD,YAKzD,cAACwK,EAAA,EAAMG,KAAP,UACIJ,EAKA,0CACYF,EADZ,oBACwCC,GAAgBA,EAAatK,KADrE,aACqFsK,GAAgBA,EAAa3K,GADlH,WAJA,+DACiC0K,EADjC,mBAC2D,kCAAKC,GAAgBA,EAAatK,KAAlC,OAD3D,WAC+G,kCAAKsK,GAAgBA,EAAa3K,GAAlC,YASnH,eAAC6K,EAAA,EAAMI,OAAP,WACE,cAACpD,EAAA,EAAD,CAAQqD,SAAUN,EAAU7I,QAAQ,SAASiC,KAAK,SAAS5B,QA9B5C,WAChBwI,GACHH,EAASE,IA4BL,oBAGA,cAAC9C,EAAA,EAAD,CAAQqD,SAAUN,EAAU7I,QAAQ,UAAUK,QAASoI,EAAvD,4BC1BGW,I,OAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAM7B,EAAY,EAAZA,MAClC,EAV0B,SAAC6B,EAAM7B,GACjC,IAAM8B,EAAY9B,EAEZ+B,EAAQD,EAAUhL,KAAOgL,EAAUhL,KAAKH,MAAM,KAAQqJ,EAAOrJ,MAAM,KAGzE,MAAO,CAAEqL,QAFOH,EAAKE,EAAM,IAETjL,KAAMiL,EAAM,GAAIA,SAIDE,CAAoBJ,EAAM7B,GAAnDgC,EAAR,EAAQA,QAASlL,EAAjB,EAAiBA,KAAMiL,EAAvB,EAAuBA,MAEvB,IAAKC,EACH,OAAQ,sDAAiBlL,KAG3B,GAAKkJ,EAAOkC,UAAW,CACrB,IAAMA,EAAalC,EAAQkC,UAC3B,OAAQ,mCAAGA,GAAaA,EAAU,CAAErB,MAAOmB,EAASD,QAAOF,WAG7D,OAAIG,EAAQG,QAAUH,EAAQI,OAAS,GAC7B,qCAAGJ,EAAQG,OAAO,EAAG,IAArB,SAGNH,EAAQK,MAAQL,EAAQM,QAAUP,EAAMK,OAAS,EAC3C,mCAAIJ,EAASM,QAAO,SAACC,EAAGlF,GAAJ,OAAUkF,EAAIlF,EAAE0E,EAAM,MAAK,MAIvD,mCACGC,MC5BMQ,GAAU,SAAC,GAAwF,IAAtFX,EAAqF,EAArFA,KAAMX,EAA+E,EAA/EA,SAAUpK,EAAqE,EAArEA,KAAqE,IAA/D2H,cAA+D,MAAtD,CAAC,MAAqD,MAA9CgE,kBAA8C,SAA1BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACrFC,EAAS9E,uBAAY,WACrB4E,GAAQA,EAAOb,KAClB,CAACA,EAAMa,IAEJG,EAAWC,mBAAQ,WACvB,OAAIH,EAAoBA,EAAYd,GAC/B,gBAAgB/K,EAAKiM,cAArB,YAAsClB,EAAKpL,MAC/C,CAACK,EAAM+K,EAAMc,IAEhB,OACE,cAAC,IAAMvI,SAAP,UACE,+BACE,oBAAI/B,UAAU,KAAd,SAAoBqK,EAAS,sBAAM7L,KAAM,OAAQmM,SAAU,EAAGC,WAAY,aAAQpK,QAAS+J,EAA9D,SAAuEf,EAAKpL,KAAa,cAAC,IAAD,CAAMmC,GAAIiK,EAAV,SAAqBhB,EAAKpL,OAC/IgI,EAAO7H,KACN,SAACoJ,GAAD,MACY,OAAVA,GACE,6BACE,cAAC,GAAD,CAAa6B,KAAMA,EAAM7B,MAAOA,SAIvC6B,EAAKzL,MAAQ,6BAAKyL,EAAKzL,KAAKI,QAE5BiM,GACC,oBAAIpK,UAAU,QAAd,SACE,cAACiG,EAAA,EAAD,CACE9F,QAAQ,SACR0K,KAAK,KACLrK,QAAS,WACPqI,EAASW,IAJb,4BC2EGsB,GAnGM,SAAC,GAA+E,IAA7ExD,EAA4E,EAA5EA,OAAQ7I,EAAoE,EAApEA,KAAoE,IAA9DsM,iBAA8D,SAA3CC,EAA2C,EAA3CA,QAAS5E,EAAkC,EAAlCA,OAAQiE,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAChF,EAAwC/G,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAwCL,mBAAS,MAAjD,mBAAOwF,EAAP,KAAqBkC,EAArB,KACA,EAAgD1H,oBAAS,GAAzD,mBAAO2H,EAAP,KAAyBC,EAAzB,KACA,EAA4D5H,oBAAS,GAArE,mBAAO6H,EAAP,KAA+BC,EAA/B,KAEA,EAAwB9H,mBAAS,IAAjC,mBAAOc,EAAP,KAAaiH,EAAb,KACA,EAA0B/H,qBAA1B,mBAAO1B,EAAP,KAAc0J,EAAd,KAEA,EAA0C/G,YAASuG,EAAYC,EAAQQ,iBAAmBR,EAAQS,gBAAiB,CACjH1G,QAAS,SAACC,GACU,+BAAdA,EAAEd,QACJN,GAAgB,GAEhB2H,EAASvG,IAGbb,YAAa,SAACuH,GACZ,IAAMC,EAAa5I,OAAOwF,oBAAoBmD,GAC1CC,EAAW5B,OAAS,GAAK2B,EAAEC,EAAW,IAAI5B,OAAS,EACrDuB,EAAQI,EAAEC,EAAW,KAErBL,EAAQ,KAGZ5G,UAAW,CAAE4C,YAhBEsE,EAAjB,EAAQC,QAAsBtH,EAA9B,EAA8BA,QAmB9B,EAAgCU,YAAY+F,EAAQc,gBAAiB,CACnE3G,YAAa,OACbhB,YAAa,SAACE,GACZ0H,IACAH,KAEF7G,QAAS,SAACC,GACU,+BAAdA,EAAEd,SACJN,GAAgB,MARfoI,EAAP,oBAaMD,EAAqB,WACzBZ,GAAoB,GACpBF,EAAgB,OAGZpC,EAAW,SAACoD,GAChBZ,GAA0B,GAC1BF,GAAoB,GACpBF,EAAgBgB,IAYlB,OAAItI,EACK,cAAC,EAAD,CAAchB,MAAOlE,IAE1B8F,EAAgB,cAAC,EAAD,CAAS9B,KAAMhE,IAGjC,gCACGoD,GAAS,+CAAgBA,EAAMqC,WAEhC,eAAC,IAAD,CAAQgI,YAAU,EAAlB,UACE,gCACE,+BACE,oCADF,OAEG9F,QAFH,IAEGA,OAFH,EAEGA,EAAQ7H,KAAI,SAACkJ,GAAD,MAAa,OAANA,GAAc,6BAAMA,EAAGhJ,KAAQgJ,EAAGhJ,KAAOgJ,OAC5DsD,GAAa,sCACd,4BAGJ,gCACG1G,EAAK0F,QACJ1F,EAAK9F,KAAI,SAAC4N,GAAD,OACP,cAAC,GAAD,CAAS1N,KAAMA,EAAM+K,KAAM2C,EAAatD,SAAUA,EAAUzC,OAAQA,EAAQgE,WAAYW,EAAWV,OAAQA,EAAQC,YAAaA,YAKxI,cAAC,EAAD,CACE3B,KAAMuC,EACNtC,OAAQmD,EACRlD,SAtCW,SAACE,GAChBsC,GAA0B,GAC1BW,EAAsB,CACpBtH,UAAW,CACTtG,GAAI2K,EAAa3K,OAmCjB0K,UAAWrK,EACXsK,aAAcA,EACdC,SAAUoC,QC9FZgB,GAAe,WACnB,IAAMH,EAAM,GAEZ,OADAA,EAAIxN,KAAO,MACJ,CAAE4N,IAAKJ,IAGVK,GAAS,SAACC,EAAMjF,GACpB,IAAI2E,EAAM3E,EAEQ,QAAdiF,EAAK9N,QACPwN,EAAM,CAACA,IACHxN,KAAO,OAGb8N,EAAKvC,KAAKiC,IAGNO,GAAqB,SAArBA,EAAsBD,GAC1B,IADmC,EAC/BjF,EAAS,GADsB,cAGnBiF,GAHmB,IAGnC,2BAAsB,CAAC,IAAZE,EAAW,QAChBA,EAAEhO,MAAQgO,EAAE1C,OAAS,EACvBzC,GAAM,WAAQkF,EAAmBC,IAEjCnF,GAAM,YAASmF,EAAEnF,OAAX,MAPyB,8BAWnC,MAAM,IAAN,OAAWiF,EAAK9N,KAAhB,aAAyB6I,EAAOwC,OAAO,GAAvC,OAGI4C,GAAiB,SAACpF,GACtB,IAAMqF,EAAK,CACTrF,OAAQ,GACRsF,OAAQ,IAMV,OAHAD,EAAGrF,OAASA,EAAO+E,IAAItC,OAAS,EAApB,mBAAoCyC,GAAmBlF,EAAO+E,KAA9D,KAAwE,GACpFM,EAAGC,OAASD,EAAGC,OAAO7C,OAAS,EAAnB,WAA2B4C,EAAGC,OAAO9C,OAAO,GAA5C,KAAoD,GAEzD6C,GA8EME,GA3Ea,SAAC,GAA+G,IAA7GpO,EAA4G,EAA5GA,KAAMiH,EAAsG,EAAtGA,OAAsG,IAA9FqF,iBAA8F,SAA3EC,EAA2E,EAA3EA,QAAS5E,EAAkE,EAAlEA,OAAgB0G,EAAkD,EAA1DxF,OAAsByF,EAAoC,EAApCA,SAAU1C,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACvH,EAA4B/G,mBAASwH,EAAYqB,KAAiB,MAAlE,mBAAO9E,EAAP,KAAeC,EAAf,KACMyF,EAAUC,cAGVC,EAAsBzH,uBAAY,SAACC,GACvC,IAAMyH,EAAgBf,KAUtB,OARI1G,GACF4G,GAAOa,EAAcd,IAAK,CAAEe,WAAY,CAAEhP,GAAIsH,KAG5CoH,GACFR,GAAOa,EAAcd,IAAKS,GAGrBK,IACN,CAACL,IAEEpF,EAAgB,SAACJ,GACrB,IAAM+F,EAAmBX,GAAepF,GAExCgG,QAAQC,IAAI,gBAAiB,CAAEjG,SAAQ+F,qBAEvC9F,EAAUD,IAGZxF,qBAAU,WACR,IAAMqL,EAAgBD,EAAoBxH,GAC1CgC,EAAcyF,KACb,CAACzH,EAAQwH,IAEZ,IAAMM,EAAiB/H,uBACrB,SAACgC,GACC,IAAM0F,EAAgBD,EAAoBxH,GAEtC+B,GACF6E,GAAOa,EAAcd,IAAK5E,GAG5BC,EAAcyF,KAEhB,CAACzH,EAAQwH,IAYX,OAAKnC,GAAczD,EAKjB,qBAAKtH,UAAU,qBAAf,SACE,oCACE,6BAAKvB,IACL,sBAAKuB,UAAU,WAAf,UACE,cAAC,EAAD,CAAYoG,OAAQA,EAAQU,SAAU0G,IACtC,2BAEF,sBAAKxN,UAAU,YAAf,UACE,cAAC,GAAD,CAAOvB,KAAMA,EAAM6I,OAAQA,EAAQ0D,QAASA,EAASD,UAAWA,EAAW3E,OAAQA,EAAQiE,OAAQA,EAAQC,YAAaA,IACxH,cAACrE,EAAA,EAAD,CAAQzF,QAvBI,WACduM,EAAUA,IACTC,EAAQhD,KAAK,SAAWvL,EAAKiM,cAAgB,YAqB5C,gCAbC,MCrGLe,GAAe,w8BACfD,GAAgB,w8BAChBM,GAAe,82BAeN2B,GAba,SAAC,GAAmC,IAAjC/H,EAAgC,EAAhCA,OAAgC,IAAxBqF,iBAAwB,SAC7D,OACE,8BACE,cAAC,GAAD,CACEtM,KAAM,QACN2H,OAAQ,CAAC,QACTV,OAAQA,EACRqF,UAAWA,EACXC,QAAS,CAAES,mBAAiBD,oBAAkBM,yB,kBCuEvC4B,GAnFY,SAAC,GAAiC,IAA/BlF,EAA8B,EAA9BA,MAAOkB,EAAuB,EAAvBA,MAAOiE,EAAgB,EAAhBA,IAAKnE,EAAW,EAAXA,KACzCG,EAAUnB,EACV/J,EAAOiL,EAAMK,OAAS,GAAKL,EAAM,GACjCkE,EAAejE,EAAQK,MAAQL,EAAQM,QAAUP,EAAMK,OAAS,EAAKJ,EAASM,QAAO,SAACC,EAAGlF,GAAJ,OAAUkF,EAAC,YAAQlF,EAAEvG,MAAS,IAAIqL,OAAO,GAAKH,EAEzI,EAA0BpG,mBAASqK,GAAnC,mBAAOtF,EAAP,KAAcuF,EAAd,KACA,EAAwBtK,mBAAS,IAAjC,mBAAOc,EAAP,KAAaiH,EAAb,KAEA9G,YAASmJ,EAAIlJ,MAAO,CAClBN,YAAa,SAAC2J,GAEZ,IAAMnC,EAAa5I,OAAOwF,oBAAoBuF,GAC9C,GAAInC,EAAW5B,OAAS,GAAK+D,EAAKnC,EAAW,IAAI5B,OAAS,EAAG,CAC3D,IAEMgE,EAFMD,EAAKnC,EAAW,IAEVpN,KAAI,SAACkB,GAAD,MAAQ,CAC5BrB,GAAIqB,EAAErB,GACN4P,SAAqC,IAA5B1F,EAAM2F,QAAQxO,EAAEhB,IACzB6C,MAAO7B,EAAEhB,OAGX6M,EAAQyC,QAERzC,EAAQ,OAMd,MAAsBrG,YAAY0I,EAAIO,IAAK,CAAE/I,YAAa,SAAnDgJ,EAAP,oBAEA,EAAyBlJ,YAAY0I,EAAIS,OAAQ,CAAEjJ,YAAa,SAAzDkJ,EAAP,oBAwCA,OAAQ,cAAClG,EAAA,EAAD,CAAgB/J,GAAG,wBAAwBkK,MAAOA,EAAlD,SACLjE,GAAQA,EAAK9F,KAAI,SAACmN,GAAD,OAChB,cAACzL,EAAA,EAASI,KAAV,CAAeG,QAAS,SAACwE,GAAD,OAxCV,SAACwD,GACjB,IAAM8F,EAAUjK,EAAK9F,KAAI,SAACmN,GAIxB,OAHIA,EAAEpK,QAAUkH,EAAMlH,QACpBoK,EAAEsC,SAAWtC,EAAEsC,SAEV,eAAKtC,MAGR6C,EAAeD,EAASrE,QAAO,SAACC,EAAGlF,GACvC,OAAIA,EAAEgJ,QAAe,GAAN,OAAU9D,EAAV,aAAgBlF,EAAE1D,OACrB4I,IACX,IAAIJ,OAAO,GAEVtB,EAAMwF,QACRG,EAAY,CACVzJ,UAAW,CACT8J,IAAKhG,EAAMpK,GACXqQ,IAAKjF,EAAKpL,MAIdiQ,EAAe,CACb3J,UAAW,CACT8J,IAAKhG,EAAMpK,GACXqQ,IAAKjF,EAAKpL,MAMhBkN,EAAQgD,GACRT,EAASU,GASwBG,CAAUhD,IAAzC,SACE,cAAC1J,EAAA,EAAK2M,MAAN,CACEvM,KAAK,WACLd,MAAOoK,EAAEpK,MACT0M,QAAStC,EAAEsC,kBC3EfY,GAAqB,suDACrBC,GAAe,woBACfC,GAA8B,ymDAC9BC,GAAmC,6nDACnCC,GAAoB,81BACpBvD,GAAkBkC,aAAH,0CAGfsB,GAAgE,SAAC,GAA4B,IAA1BzG,EAAyB,EAAzBA,MAAOkB,EAAkB,EAAlBA,MAAOF,EAAW,EAAXA,KAE/EmE,EAAM,CACVlJ,MAAOoK,GACPX,IAAKY,GACLV,OAAQW,IAGV,OAAO,cAAC,GAAD,CAAavG,MAAOA,EAAOkB,MAAOA,EAAOiE,IAAKA,EAAKnE,KAAMA,KAgBnD0F,GAbU,SAAC,GAAmC,IAAjCxJ,EAAgC,EAAhCA,OAAgC,IAAxBqF,iBAAwB,SAC1D,OACE,8BACE,cAAC,GAAD,CACEtM,KAAM,QACN2H,OAAQ,CAAC,QAAS,WAAY,CAAE3H,KAAM,aAAcoL,UAAWoF,IAAe,YAC9EvJ,OAAQA,EACRqF,UAAWA,EACXC,QAAS,CAAES,mBAAiBD,iBAAkBoD,GAAuB9C,gBAAiBkD,S,OCjB/EG,I,GAAAA,GAZf,WACE,OACE,qBAAKnP,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,6CACA,cAAC,IAAD,CAAMO,GAAG,SAAT,yB,gDCTK6O,GAAiC,oCAAMC,yGAAN,EAAM,EAA4BvF,OAAO,GAAE,UAAAuF,yGAAA,IAA4BtF,QAAS,IAEjHuF,GAAe,SAACnR,GAGzB,OAAO,IAAIoR,OAAO,4CAA4CC,KAAKrR,IAW1DsR,GAAiB,SAACC,GAC3B,IAAM3F,EAAS2F,EAAS3F,OAExB,GAAGA,EAAS,EACR,MAAO,CACJ4F,OAAO,EACPC,OAAQ,EACRnR,KAAM,GACN0B,QAAS,UAIhB,GAAG4J,GAAU,GACT,MAAO,CACH4F,OAAO,EACPC,OAAQ,IACRnR,KAAM,SACN0B,QAAS,WAIjB,IAAM0P,EAAU,kBAAkBL,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EACtFI,EAAQ,kBAAkBN,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EACpFK,EAAS,kBAAkBP,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EAGrFlH,EAAQqH,EAAUC,EAAQC,GAFhB,uBAAuBP,KAAKE,GAAY,EAAM,mBAAmBF,KAAKE,GAAY,EAAI,GAIhGC,EAAS5F,EAAS,GAAK+F,EAAQ,GAAKC,EAAS,IAAMV,EACrDW,EAAcxH,EAAOuB,EAAO,EAGhC,OAFGiG,EAAa,KAAIA,EAAa,IAE1B,CACHL,QACAC,OAAqB,GAAbI,EACRvR,KAAM+J,EAAQ,EAAI,SAAYA,EAAQ,EAAI,eAAkBmH,EAAQ,OAAS,OAC7ExP,QAAS6P,EAAa,EAAI,UAAaL,EAAQ,UAAY,WC/C7DM,GAAmC,ugCAoG1BC,GAlGkB,WAC/B,MAA0B3M,mBAAS,IAAnC,mBAAOpF,EAAP,KAAcgS,EAAd,KACA,EAAwC5M,oBAAS,GAAjD,mBAAO6M,EAAP,KAAqBC,EAArB,KACA,EAAkC9M,oBAAS,GAA3C,mBAAO+M,EAAP,KAAkBC,EAAlB,KAEA,EAAkDtL,YAAYgL,GAAqC,CACjG9K,YAAa,SADf,mBAAOqL,EAAP,YAA8BjM,EAA9B,EAA8BA,QAASF,EAAvC,EAAuCA,KAIjCoM,EAAa,yCAAG,uBAAAC,EAAA,yDACpBH,GAAa,IACTpS,IAASmR,GAAanR,GAFN,wBAGlBkS,GAAgB,GAHE,kBAKVG,EAAoB,CAAE9L,UAAW,CAAEvG,WALzB,OAMhBoS,GAAa,GANG,gDAQhBjD,QAAQC,IAAI,UAAWlJ,GACvBgM,GAAgB,GATA,gCAYlBA,GAAgB,GAZE,yDAAH,qDAqBnB,OAAIC,EAEA,mCACE,eAAC1N,EAAA,EAAD,CAAOzC,QAAS,UAAhB,iDAAgEhC,EAAhE,8DAKE,qCACN,yBAASC,GAAG,YAAY,eAAa,sCAArC,SACE,qBAAK4B,UAAU,gCAAgC,oBAAkB,IAAjE,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMd,OAAO,YAAYc,UAAU,MAAM5B,GAAG,iBAAiBuS,OAAO,OAAOlS,KAAK,SAAhF,UACE,sBAAKuB,UAAU,wBAAf,UACE,oDACA,4DAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAAS,eAAa,mCAAzC,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMvB,KAAK,cAAcL,GAAG,eAAe4B,UAAU,cAAc2Q,OAAO,OAAOzR,OAAO,YAAxF,UAGE,cAAC8C,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKZ,QAAN,CACEgB,KAAK,QACLX,YAAY,cACZqF,SA7CI,SAAC8J,GACrBT,EAASS,EAAMnI,OAAOD,OACtB6H,GAAgB,IA4CA7H,MAAOrK,EACPkE,UAAW+N,IAEb,cAACpO,EAAA,EAAK6O,KAAN,CAAW7Q,UAAU,aAArB,iEAQJ,sBAAK5B,GAAG,SAAS4B,UAAU,YAA3B,WACIuE,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUK,QAAS,kBAAMiQ,KAA/D,gCACZlM,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUmJ,UAAQ,EAAxD,wBAEZ,qBAAKtJ,UAAU,+B,8BC5EhB8Q,GAfkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,iBAAkBrB,EAApB,EAAoBA,SAAUsB,EAA9B,EAA8BA,eAA9B,OAC7B,eAAChP,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKZ,QAAN,CACIgB,KAAK,WACLX,YAAY,WACZqF,SAAUiK,EACVvI,MAAOkH,EACPrN,WAAY2O,EAAerB,QAE/B,cAAC3N,EAAA,EAAK6O,KAAN,uHACA,cAACI,GAAA,EAAD,CAAaC,IAAKF,EAAepB,OAAQtO,MAAO0P,EAAevS,KAAM0B,QAAS6Q,EAAe7Q,cCHxFgR,GAAiC,s+BACjCC,GAAiC,i8EAoJ/BC,GAjJuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjCtT,EAAQuT,KAAEC,IAAIF,EAAO,gBAC3B,EAAgC/N,mBAAS,IAAzC,mBAAOmM,EAAP,KAAiB+B,EAAjB,KACA,EAAwBlO,mBAAS,IAAjC,mBAAOmO,EAAP,KAAaC,EAAb,KAEM3E,EAAUC,cACVrM,EAAWC,cAEjB,EAAiHoE,YAAYkM,GAAmC,CAC9JhM,YAAa,SADf,mBAAOyM,EAAP,YAA4CC,EAA5C,EAAmCtN,QAA8CuN,EAAjF,EAA2EzN,KAI3E,EAAsDY,YAAYmM,GAAmC,CACnGjM,YAAa,SADf,mBAAO4M,EAAP,YAAmCxN,EAAnC,EAAmCA,QAASF,EAA5C,EAA4CA,KAKjC2N,EAAmBzO,oBAAS,GAA/B,GACR,EAA4BA,mBAASkM,GAAe,KAApD,mBAAOG,EAAP,KAAeqC,EAAf,KACA,EAAsC1O,oBAAS,GAA/C,mBAAO2O,EAAP,KAAoBC,EAApB,KAEArQ,qBAAU,YACK,yCAAG,uBAAA4O,EAAA,+EAENkB,EAAyB,CAAElN,UAAW,CAAE1G,WAFlC,qJAAH,qDAUboU,KAEC,CAACpU,EAAO4T,IAEX,IAAMS,EAAO,yCAAG,+BAAA3B,EAAA,yDACTd,EAAOD,MADE,oDAKVD,IAAagC,EALH,uBAMZS,GAAe,GANH,0CAWZvR,EAAS3B,EAAY,eAXT,SAYW8S,EAAyB,CAAErN,UAAW,CAAE1G,QAAO0R,cAZ1D,gBAYJrL,EAZI,EAYJA,KACRzD,EAASxB,EAAMiF,EAAKiO,QACpBtF,EAAQuF,QAAQ,kBAdJ,kDAgBZjF,QAAQC,IAAI,UAAWlJ,GAhBX,0DAAH,qDAwCb,OAAIwN,EACM,cAACjP,EAAA,EAAD,CAAOzC,QAAS,UAAhB,4BACC2R,GAA8BA,EAA2BU,OAAqD,UAA5CV,EAA2BU,MAAMC,OACpG,qCACN,yBAASrU,GAAG,YAAY,eAAa,sCAArC,SACE,qBAAK4B,UAAU,gCAAgC,oBAAkB,IAAjE,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMd,OAAO,YAAYc,UAAU,MAAM5B,GAAG,iBAAiBuS,OAAO,OAAOlS,KAAK,SAAhF,UACE,sBAAKuB,UAAU,wBAAf,UACE,qDACA,yDAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAAS,eAAa,mCAAzC,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMvB,KAAK,cAAcL,GAAG,eAAe4B,UAAU,cAAc2Q,OAAO,OAAOzR,OAAO,YAAxF,UAGE,eAAC8C,EAAA,EAAD,WAEGkQ,GAAgB,cAACtP,EAAA,EAAD,CAAOzC,QAAS,SAAhB,kDACjB,cAAC,GAAD,CAAmBuP,SAAUA,EAAUqB,iBAlD9B,SAACH,GACxB,IAAM8B,EAAO9B,EAAMnI,OAAOD,MAC1BiJ,EAAYiB,GACZ,IAAM/C,EHnEqB,SAACD,GAI5B,MAD0B,yDACDF,KAAKE,GG+DhBiD,CAAgBD,GAC9BV,GAAgBrC,GAChBsC,EAAUxC,GAAeiD,KA6CgE1B,eAAgBpB,IAE3F,eAAC5N,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKZ,QAAN,CACEgB,KAAK,WACLX,YAAY,kBACZqF,SAjDC,SAAC8J,GACpB,IAAMgC,EAAIhC,EAAMnI,OAAOD,MACvBmJ,EAAQiB,GACRZ,GAAe,GAEXY,IAAMlD,GACRyC,GAAe,IA4CC3J,MAAOkJ,EACPrP,UAAW6P,UAKjB,sBAAK9T,GAAG,SAAS4B,UAAU,YAA3B,WACIuE,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUK,QAAS,kBAAM6R,KAAW/I,UAAWsG,EAAOD,MAA5F,4BACZpL,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUmJ,UAAQ,EAAxD,wBAEZ,qBAAKtJ,UAAU,8BAarB,eAAC4C,EAAA,EAAD,CAAOzC,QAAS,SAAhB,iBAA8B,4BAAInC,IAAlC,oCCvJC6U,GAAiB,kBAAMhS,eCDvByO,IDEiB3O,ICFF,SAACxC,GAGzB,OAAO,IAAIoR,OAAO,4CAA4CC,KAAKrR,KCK1D2U,GAAQ,20EA0HNC,GAxHM,WACjB,MAA0BxP,mBAAStF,aAAaC,QAAQ,eAAiB,IAAzE,mBAAOC,EAAP,KAAcgS,EAAd,KACA,EAAwB5M,mBAAS,IAAjC,mBAAOmP,EAAP,KAAaM,EAAb,KAEA,EAAwCzP,oBAAS,GAAjD,mBAAO6M,EAAP,KAAqBC,EAArB,KACA,EAAsC9M,oBAAS,GAA/C,mBAAO0P,EAAP,KAAoBjB,EAApB,KAEMhF,EAAUC,cACV3J,EAAQ,IAAI4P,gBAAgBlG,EAAQmG,SAASC,QAC7CnS,EAAOqC,EAAMkO,IAAI,QACjBhT,EAAO8E,EAAMkO,IAAI,QAGjB5Q,EAAWiS,KACjB,EAAqC5N,YAAY6N,GAAU,CAAE3N,YAAa,SAA1E,mBAAOkO,EAAP,KAAwB9O,EAAxB,KAAwBA,QAElB+O,EAAO,yCAAG,iCAAA5C,EAAA,yDACPpB,GAAanR,GADN,yCAEDkS,GAAgB,IAFf,uBAMRzP,EAAS3B,EAAY,eANb,SAOeoU,EAAc,CAAE3O,UAAW,CAAEvG,QAAOuU,UAPnD,gBAOArO,EAPA,EAOAA,KACFhF,EAAYgF,EAAKkP,SAEvB3S,EAASxB,EAAMC,IAGf2N,EAAQuF,QAAQtR,GAlBJoO,mBAKJ,kDAeRgB,GAAgB,GAChB2B,GAAe,GACfgB,EAAQ,IAjBA,0DAAH,qDAiCPQ,EAAc,WAChBxG,EAAQyG,UAGZ,OAAQ,qCACJ,yBAASrV,GAAG,YAAY,eAAa,sCAArC,SACI,qBAAK4B,UAAU,gCAAgC,oBAAkB,IAAjE,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,uBAAMd,OAAO,YAAYc,UAAU,MAAM5B,GAAG,iBAAiBuS,OAAO,OAAOlS,KAAK,SAAhF,UACI,sBAAKuB,UAAU,wBAAf,UACI,4CACA,0DACCxB,GAAQ,eAACoE,EAAA,EAAD,CAAOzC,QAAS,UAAhB,yEAAuF,4BAAI3B,IAA3F,qBAAsH,cAAC,IAAD,CAAM+B,GAAI,IAAKC,QAASgT,EAAxB,qCAC5HhV,GAAQyC,GAAS,eAAC2B,EAAA,EAAD,CAAOzC,QAAS,UAAhB,gFAA8F,cAAC,IAAD,CAAMI,GAAI,IAAKC,QAASgT,EAAxB,uCAEtH,qBAAKxT,UAAU,0BAQvC,yBAASA,UAAU,SAAS,eAAa,mCAAzC,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,eAACgC,EAAA,EAAD,CAAMvD,KAAK,cAAcL,GAAG,eAAe4B,UAAU,cAArD,WACMiT,GAAe,uDAChBA,GAAe,eAACrQ,EAAA,EAAD,CAAOzC,QAAS,SAAhB,qDAAkE,cAAC,IAAD,CAAMI,GAAG,sBAAT,qCAAlE,OACf6P,GAAiB,cAACxN,EAAA,EAAD,CAAOzC,QAAS,SAAhB,2CAClB,eAAC6B,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKZ,QAAN,CAAcgB,KAAK,OAAOX,YAAY,cAAcqF,SA/C1D,SAAC8J,GACnBT,EAASS,EAAMnI,OAAOD,OACtB6H,GAAgB,GAChB2B,GAAe,IA4CsFxJ,MAAOrK,EAAOkE,UAAW+N,OAI1G,eAACpO,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKZ,QAAN,CAAcgB,KAAK,WAAW0E,SA/CjC,SAAC8J,GACtBoC,EAAQpC,EAAMnI,OAAOD,OACrB6H,GAAgB,GAChB2B,GAAe,IA4CmExJ,MAAOkK,EAAMrQ,UAAW4Q,IAClF,cAACjR,EAAA,EAAK6O,KAAN,CAAW7Q,UAAU,aAArB,kEAKJ,sBAAK5B,GAAG,SAAS4B,UAAU,YAA3B,WACMuE,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUK,QAAS,kBAAM8S,KAA/D,mBACZ/O,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUmJ,UAAQ,EAAxD,wBACZ,qBAAKtJ,UAAU,aAEf,qBAAKA,UAAU,kBAEf,qBAAIA,UAAU,UAAd,UACI,gDACA,6BAAI,mBAAGM,KAAI,UAAK8O,KAAL,gBAAP,sBACJ,6BAAI,mBAAG9O,KAAI,UAAK8O,KAAL,kBAAP,wBACJ,6BAAI,mBAAG9O,KAAI,UAAK8O,KAAL,gBAAP,2CC9G3BsE,GAAqB,yCAAG,WAAOtR,EAAMuR,GAAb,UAAAjD,EAAA,+EAC1BkD,KAAMpC,IAAN,UAAapC,KAAb,iBAAsDhN,EAAtD,0BAA4EuR,KADlD,2CAAH,wDAIrBE,GAAmB,SAAC,GAAc,IAAZzR,EAAW,EAAXA,KACzB+Q,EAAWW,cACXC,EAAUxC,KAAEC,IAAI2B,EAAU,SAAU,IAAI7U,MAAM,UAC9CqV,EAAOI,EAAQhK,OAAS,EAAIgK,EAAQ,GAAK,GAGzC/G,EAAUC,cACVrM,EAAWiS,KAEjB,EAA0BtP,qBAA1B,mBAAO1B,EAAP,KAAc0J,EAAd,KAEMyI,EAAY,SAACC,GACf1I,EAAS0I,GACTC,YAAW,WACPlH,EAAQuF,QAAQ,YACjB,MAqBP,OAlBAzQ,qBAAU,WAcF6R,EAbS,yCAAG,iCAAAjD,EAAA,+EAEWgD,GAAsBtR,EAAMuR,GAFvC,OAEFtP,EAFE,OAGRzD,EAASxB,EAAMiF,IACf2I,EAAQuF,QAAQ,kBAJR,gDAMF4B,EAAWC,KAAKC,MAAM9C,KAAEC,IAAF,KAAU,mBAAoB,OAC1DwC,GAAU,UAAAG,EAAStS,aAAT,eAAgBqC,UAAW,KAAGA,SAPhC,yDAAH,oDAaHoQ,GACLN,EAAU,kBAGX,mCACHnS,GAAS,eAACe,EAAA,EAAD,CAAOzC,QAAS,SAAhB,UAA2BiC,EAA3B,2BAAwDP,EAAxD,kCAA6F,cAAC,IAAD,CAAMtB,GAAG,SAAT,yBCxClGgU,GAAiB,w1EA2JfC,GAzJS,WACtB,IAEA,EAA0BjR,mBAAS,IAAnC,mBAAOpF,EAAP,KAAcgS,EAAd,KACA,EAAwB5M,mBAAS,IAAjC,mBAAOmP,EAAP,KAAaM,EAAb,KACA,EAAwBzP,mBAAS,IAAjC,mBAAOmO,EAAP,KAAaC,EAAb,KAEM3E,EAAUC,cACVrM,EAAWiS,KAEjB,EAA8C5N,YAAYsP,GAAmB,CAC3EpP,YAAa,SADf,mBAAOsP,EAAP,YAA2BlQ,EAA3B,EAA2BA,QAASF,EAApC,EAAoCA,KAIpC,EAAwCd,oBAAS,GAAjD,mBAAO6M,EAAP,KAAqBC,EAArB,KACA,EAAoD9M,oBAAS,GAA7D,mBAAOmR,EAAP,KAA2BC,EAA3B,KACA,EAA4BpR,mBAASkM,GAAe,KAApD,mBAAOG,EAAP,KAAeqC,EAAf,KAEA,EAAsC1O,oBAAS,GAA/C,mBAAO2O,EAAP,KAAoBC,EAApB,KAEMyC,EAAU,yCAAG,iCAAAlE,EAAA,yDACZpB,GAAanR,GADD,yCAERkS,GAAgB,IAFR,UAKbqC,IAAShB,EALI,uBAMfS,GAAe,GANA,0CAWfvR,EAAS3B,EAAY,eAXN,SAYQwV,EAAiB,CAAE/P,UAAW,CAAEvG,QAAOuU,UAZ/C,gBAYPrO,EAZO,EAYPA,KACFhF,EAAYgF,EAAKwQ,YAEvBjU,EAASxB,EAAMC,IAEf2N,EAAQuF,QApCQlD,mBAmBD,kDAmBf/B,QAAQC,IAAI,UAAWlJ,GACvBsQ,GAAsB,GApBP,0DAAH,qDAiDhB,OAAQ,qCACN,yBAASvW,GAAG,YAAY,eAAa,sCAArC,SACE,qBAAK4B,UAAU,gCAAgC,oBAAkB,IAAjE,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMd,OAAO,YAAYc,UAAU,MAAM5B,GAAG,iBAAiBuS,OAAO,OAAOlS,KAAK,SAAhF,UACE,sBAAKuB,UAAU,wBAAf,UACE,mDACA,gEAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAAS,eAAa,mCAAzC,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMvB,KAAK,cAAcL,GAAG,eAAe4B,UAAU,cAAc2Q,OAAO,OAAOzR,OAAO,YAAxF,UAGE,eAAC8C,EAAA,EAAD,WACGoO,GAAiB,cAACxN,EAAA,EAAD,CAAOzC,QAAS,SAAhB,2CACjBuU,GAAuB,eAAC9R,EAAA,EAAD,CAAOzC,QAAS,SAAhB,8CAA2D,cAAC,IAAD,CAAMI,GAAG,sBAAT,gCAA3D,OACvB2R,GAAgB,cAACtP,EAAA,EAAD,CAAOzC,QAAS,SAAhB,kDACjB,eAAC6B,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKZ,QAAN,CACEgB,KAAK,QACLX,YAAY,cACZqF,SA3DI,SAAC8J,GACrBT,EAASS,EAAMnI,OAAOD,OACtB6H,GAAgB,GAChBsE,GAAsB,IAyDNnM,MAAOrK,EACPkE,UAAW+N,IAEb,cAACpO,EAAA,EAAK6O,KAAN,CAAW7Q,UAAU,aAArB,+DAKF,cAAC,GAAD,CAAmB0P,SAAUgD,EAAM3B,iBA9DxB,SAACH,GACxB,IAAM8B,EAAO9B,EAAMnI,OAAOD,MAE1BwK,EAAQN,GACRrC,GAAgB,GAChB4B,EAAUxC,GAAeiD,KAyD0D1B,eAAgBpB,IAEvF,eAAC5N,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKZ,QAAN,CACEgB,KAAK,WACLX,YAAY,kBACZqF,SA7DG,SAAC8J,GACpB,IAAMgC,EAAIhC,EAAMnI,OAAOD,MACvBmJ,EAAQiB,GACRvC,GAAgB,GAEZuC,IAAMF,GACRP,GAAe,IAwDD3J,MAAOkJ,EACPrP,UAAW6P,UAKjB,sBAAK9T,GAAG,SAAS4B,UAAU,YAA3B,WACIuE,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUK,QAAS,kBAAMoU,KAA/D,sBACZrQ,GAAW,cAAC0B,EAAA,EAAD,CAAQjG,UAAU,YAAYG,QAAQ,UAAUmJ,UAAQ,EAAxD,wBAEZ,qBAAKtJ,UAAU,aAEf,qBAAKA,UAAU,oCCxIzB8U,GAAwBnH,aAAH,yQA4EZoH,GA7DW,SAAC,GAAe,IAAbzD,EAAY,EAAZA,MACrB0D,EAAczD,OAAMD,EAAO,sBACjC,EAAgC/N,oBAAS,GAAzC,mBAAO7E,EAAP,KAAiBuW,EAAjB,KAEMjI,EAAUC,cACVrM,EAAWC,cAEjB,EAAqEoE,YAAY6P,GAAuB,CACtG3P,YAAa,SADf,mBAAO+P,EAAP,YAA0BC,EAA1B,EAAiB5Q,QAAoBF,EAArC,EAAqCA,KAAa+Q,EAAlD,EAA2CvT,MAIrCwT,EAAY,yCAAG,+BAAA3E,EAAA,+EAEMwE,EAAO,CAAExQ,UAAW,CAAEsQ,iBAF5B,gBAET3Q,EAFS,EAETA,KACRzD,EAASxB,EAAMiF,EAAKiR,iBACpBL,GAAY,GACZhX,aAAaqB,QAAQ,mBAAoB0V,GACzCd,YAAW,WACTlH,EAAQuF,QAAQ,oBACf,KARc,kDAUjBjF,QAAQC,IAAI,UAAWlJ,GAVN,0DAAH,qDAmClB,OAPAvC,qBAAU,WACJkT,GAde,WACnB,IAAMO,EAAqBtX,aAAaC,QAAQ,oBACe,SAA1CD,aAAaC,QAAQ,kBAItBqX,IAAuBP,EACzChI,EAAQuF,QAAQ,kBAEhB8C,IAMAG,MAKI,kCACN,qBAAKxV,UAAU,gCAAgC,oBAAkB,IAAjE,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACGtB,EAAY,sBAAKsB,UAAU,sBAAsBxB,KAAK,QAA1C,uCAA4E,cAACyH,EAAA,EAAD,gCAAyC,KACjIkP,EAAa,qBAAKnV,UAAU,mBAAmBxB,KAAK,QAAvC,wCAAmF,MAC/FwW,GAAeI,EAAiB,qBAAKpV,UAAU,mBAAmBxB,KAAK,QAAvC,oDAA+F,iBClE5HiX,OATV,WACH,OACE,8BACE,mD,SCGFvQ,I,OAAe,g0CASfwQ,GAAc,40CAiFdC,GAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACI,qBAAK5V,UAAU,YAAY6V,MAAO,CAACC,gBAAgBF,EAAKG,OAAxD,SAAiEH,EAAKtN,SAI/D0N,GA/ED,WACV,IAAMjY,EAAO4C,YAAYf,GAEzB,EAA0B2D,mBAAS,IAAnC,mBAAO0S,EAAP,KAAcC,EAAd,KAGA,EAAwC3S,mBAAS,2BAAjD,mBAAO4S,EAAP,KAAqBC,EAArB,KACA,EAAwC7S,mBAAS,WAAjD,mBAAO8S,EAAP,KAAqBC,EAArB,KACA,EAA6CrR,YAAYC,IAAzD,mBAAOqR,EAAP,UAAqB1U,MAED2C,YAASkR,GAAgB,CACzCvR,YAAa,SAACE,GACV6R,EAAS,aAAI7R,EAAKmS,WACnB9R,UAAY,CACX+R,QAAS,iBACTnP,OAAQ,CACJ8F,WAAY,CACRhP,GAAE,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMK,QAPlBmG,QAiCR,OACI,qCACI,oBAAIvE,UAAU,cAAd,mBACA,eAACgC,EAAA,EAAD,CAAMhC,UAAU,YAAhB,UACA,eAACgC,EAAA,EAAKC,MAAN,CAAYjC,UAAU,OAAOkC,UAAU,+BAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,oCACA,cAACH,EAAA,EAAKZ,QAAN,CAAcgH,GAAG,WAAWsO,KAAM,EAAGlO,MAAO2N,EAAcrP,SAhB/C,SAAC8J,GACpBtD,QAAQC,IAAIqD,EAAMnI,OAAOD,OACzB4N,EAAgBxF,EAAMnI,OAAOD,aAgBzB,sBAAKxI,UAAU,mBAAf,UACI,cAACiG,EAAA,EAAD,CAAQ9F,QAAQ,UAAUK,QA7BpB,WACd,GAAG2V,EAAapM,OAAS,EAAE,CACvB,IAAM4M,EAAU,CAACrO,MAAO6N,EAAcJ,MAAOM,GAC7CH,EAAS,CAACS,GAAF,oBAAcV,KACtBG,EAAgB,IAChBG,EAAW,CAAC7R,UAAWiS,IACvBrJ,QAAQC,IAAI,iBAAkB0I,KAuB1B,sBACA,qBAAKjW,UAAU,eAAf,SACI,cAACgC,EAAA,EAAKZ,QAAN,CACIgB,KAAK,QACLhE,GAAG,oBACHwY,aAAa,UACbtO,MAAM,oBACNxB,SArBE,SAAC8J,GACnBtD,QAAQC,IAAI,gBAAiBqD,EAAMnI,OAAOD,OAC1C8N,EAAgB1F,EAAMnI,OAAOD,kBAyBzB,qBAAKxI,UAAU,aAAf,SAEKiW,EAAM1X,KAAI,SAACsY,EAAaC,GAAd,OAAsB,8BAAiB,cAAC,GAAD,CAAUlB,KAAMiB,KAAvBC,YC3E5C,SAASC,KACtB,OACE,qCACE,cAAC,EAAD,IAQA,eAAC,IAAD,WACA,cAACC,EAAD,CAAgB9V,OAAK,EAACD,KAAK,SAA3B,SACI,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,SAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,GAAD,CAAkBmB,KAAM,eAE1B,cAAC,IAAD,CAAOnB,KAAK,gBAAZ,SACE,cAAC,GAAD,CAAkBmB,KAAM,aAE1B,cAAC,IAAD,CAAOnB,KAAK,gBAAZ,SACE,cAAC,GAAD,CAAkBmB,KAAM,aAE1B,cAAC,IAAD,CAAOnB,KAAK,YAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CACEA,KAAK,6BACL4I,UAAWoN,KAEb,cAAC,IAAD,CAAO/V,OAAK,EAACD,KAAK,sBAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,4BAA4B4I,UAAWkL,KAEnD,cAACiC,EAAD,CAAgB/V,KAAK,kBAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAEZ,cAAC+V,EAAD,CAAgB/V,KAAK,eAAezC,KAAM,QAA1C,SACE,cAAC,GAAD,CAAWuM,WAAW,MAExB,cAACiM,EAAD,CAAgB/V,KAAK,eAAezC,KAAM,QAA1C,SACE,cAAC0Y,GAAD,CAAenM,WAAW,MAE5B,cAACiM,EAAD,CACE/V,KAAK,kBACLzC,KAAM,QACN2C,SAAU,cAAC,EAAD,YCxEb,IAAMgW,GAAQC,YAAe,CAClCC,QAAS,CACPtZ,KAAMuZ,KCOU3Y,QACW,cAA7B4Y,OAAOpE,SAASqE,UAEe,UAA7BD,OAAOpE,SAASqE,UAEhBD,OAAOpE,SAASqE,SAASlG,MACvB,2D,kFChBO/R,GAAY,yCAAG,iCAAAmR,EAAA,6DAClBhL,EAASzH,aAAaC,QAAQ,WAC9BF,EAAQC,aAAaC,QAAQ,cAC7BqB,EAAetB,aAAaC,QAAQ,qBAHlB,kBAIjB0V,KAAMgC,KAAKvG,mGAAkC,CAChD/L,MAAM,qSAQNoB,UAAW,CACPgB,SACA1H,QACAuB,mBAhBgB,2CAAH,qDCInBkY,GAAY,I,OAAIC,GAAU,CAC9BC,SAAU,SAACC,EAAOC,EAAWhW,GAC3B,OAAO,GAETiW,MAAO,SAACF,EAAOC,EAAWhW,GACxB,OAAe,IAAR+V,EAAeG,KAAKC,YAI3BC,IAAe,EACfC,GAAkB,GAShBC,GAAqB,SAACC,EAASP,GAGnC,IAAIQ,EA8CJ,OA5CKJ,GAmCHI,EAAWC,aACT,IAAIC,SAAQ,SAACC,GAEXN,GAAgBlO,MAAK,kBAAMwO,YArC/BP,IAAe,EACfI,EAAWC,aACT/Y,KAEGkZ,MAAK,YAAe,IAETC,EAFQ,EAAXrU,KAELA,KAAQqU,gBAEVza,aAAaqB,QAAQ,aAAcoZ,EAAgB1a,OACnDC,aAAaqB,QAAQ,oBAAqBoZ,EAAgBnZ,cApBlE2Y,GAAgB3Z,KAAI,SAACoa,GAAD,OAAcA,OAClCT,GAAkB,GAuBV,IAAMU,EAAaf,EAAUgB,aAAaC,QAQ1C,OANAjB,EAAUkB,WAAW,CACnBD,QAAQ,2BACHF,GADE,IAELI,cAAc,UAAD,OAAYN,EAAgB1a,WAGtCoa,EAAQP,MAEhBoB,OAAM,SAACpX,GACNqW,GAAkB,MAInBgB,SAAQ,WACPjB,IAAe,MAEnB3Q,QAAO,SAACkB,GAAD,OAAW7J,QAAQ6J,OAYvB6P,EAASc,SAAQ,WACtB,OAAOf,EAAQP,OAIbuB,GAAWL,cAAW,SAACxH,EAAD,GAAqB,IAAfuH,EAAc,EAAdA,QAE1B9a,EAAQC,aAAaC,QAAQ,cAEnC,MAAO,CACL4a,QAAQ,2BACHA,GADE,IAELE,cAAehb,EAAK,iBAAaA,GAAU,SAK3Cqb,GAAWC,aAAe,CAC9BC,IAAKlK,qGAIDmK,GAAWzU,cAAQ,YAA0D,IAAvD0U,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,aAAc7B,EAAyB,EAAzBA,UAAWO,EAAc,EAAdA,QAClE,GAAIqB,EAAc,CAChB,GAAGA,EAAcE,MAAK,SAAC9X,GAAD,OAAWA,EAAM+X,gBACrC,OAAOzB,GAAmBC,EAASP,GAErC4B,EAAclb,KAAI,gBAAG2F,EAAH,EAAGA,QAAS2V,EAAZ,EAAYA,UAAW5Y,EAAvB,EAAuBA,KAAvB,OAAkCqM,QAAQC,IAAR,oCAAyCrJ,EAAzC,uBAA+D2V,EAA/D,mBAAmF5Y,OAGrIyY,GAAcpM,QAAQC,IAAR,2BAAgCmM,OAmBrCI,GAhBa,IAAIC,KAAa,CAC3CC,KAAMC,cAAWC,KAAK,CAACzC,GAAW+B,GAAUJ,GAAUC,KACtDc,MAAO,IAAIC,KACXC,eAAgB,CACdC,WAAY,CACVnV,YAAa,QAEf7B,MAAO,CACL6B,YAAa,QAEfoV,OAAQ,CACNpV,YAAa,UC3GnBqV,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvD,MAAOA,GAAjB,SACE,cAACwD,GAAA,EAAD,CAAgBC,OAAQd,GAAxB,SACE,cAAC,IAAD,CAAee,SAAUxL,IAAzB,SACE,cAAC0H,GAAD,YAKR+D,SAASC,eAAe,SHgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAC0C,GACLA,EAAaC,gBAEdnC,OAAM,SAACpX,GACNyL,QAAQzL,MAAMA,EAAMqC,c","file":"static/js/main.6ba852aa.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst userToStorage = (userToken) => {\r\n  localStorage.setItem('user.token', userToken.token)\r\n  localStorage.setItem('user.refreshToken', userToken.refreshToken)\r\n  localStorage.setItem('user.id', userToken.user.id)\r\n  localStorage.setItem('user.email', userToken.user.email)\r\n  localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\r\n  localStorage.setItem('user.roles', userToken.user.roles.map((r) => r.name).toString())\r\n}\r\n\r\nconst removeUserFromStorage = () => {\r\n  localStorage.removeItem('user.refreshToken')\r\n  localStorage.removeItem('user.token')\r\n  localStorage.removeItem('user.id')\r\n  // localStorage.removeItem('user.email')\r\n  localStorage.removeItem('user.verified')\r\n  localStorage.removeItem('user.roles')\r\n}\r\n\r\nconst userFromStorage = () => {\r\n  const token = localStorage.getItem('user.token')\r\n  if (!token) {\r\n    return\r\n  }\r\n\r\n  return {\r\n    token,\r\n    email: localStorage.getItem('user.email'),\r\n    id: localStorage.getItem('user.id'),\r\n    roles: localStorage\r\n      .getItem('user.roles')\r\n      ?.split(',')\r\n      .map((role) => ({ name: role })),\r\n    verified: Boolean(localStorage.getItem('user.verified')),\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  user: userFromStorage(),\r\n  state: 'no-user',\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    changeState: (state, action) => {\r\n      state.state = action.payload\r\n    },\r\n    login(state, action) {\r\n      userToStorage(action.payload)\r\n      state.user = {\r\n        id: action.payload.user.id,\r\n        token: action.payload.token,\r\n        email: action.payload.user.email,\r\n        roles: action.payload.user.roles,\r\n        verified: Boolean(action.payload.user.verified),\r\n      }\r\n    },\r\n    logout(state) {\r\n      removeUserFromStorage()\r\n      delete state.user\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectUser = (state) => state?.user?.user\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout, changeState } = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserHeader = ({ user, onLogout }) => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Admin\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/admin/users\">Users</Dropdown.Item>\r\n          <Dropdown.Item href=\"/admin/roles\">Roles</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This Header only for loged user with admin role\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          User\r\n        </Dropdown.Toggle>\r\n\r\n\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n          <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\n\r\nexport const PublicHeader = () => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This is public Header\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\n\r\n\r\nexport default PublicHeader","import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserHeader = ({ user, onLogout }) => (<div className=\"header-light transparent scroll-light container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n    <div className=\"header-text col-md-8\">\r\n      <div>\r\n        This Header only for anybody who is logged in\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          User\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n          <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from '../../app/reducers/userSlice'\r\nimport AdminHeader from './AdminHeader'\r\nimport PublicHeader from './PublicHeader'\r\nimport UserHeader from './UserHeader'\r\n\r\nexport const Header = () => {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  if (user && user.token) {\r\n    if (user.roles.find((r) => r.name === 'admin')) return <AdminHeader user={user} onLogout={onLogout} />\r\n    else return <UserHeader user={user} onLogout={onLogout} />\r\n  }\r\n\r\n  return <PublicHeader />\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { selectUser } from '../../app/reducers/userSlice'\r\n\r\nexport const ProtectRoute = ({ path, role, exact, children }) => {\r\n    const user = useSelector(selectUser)\r\n\r\n    if (role && !user?.roles.find(r => r.name === role)) {\r\n        return (<Redirect to={`/login?path=${path}&role=${role}`} />)\r\n    }\r\n\r\n    if (!user?.token) {\r\n        return (<Redirect to={`/login?path=${path}`} />)\r\n    }\r\n\r\n    return (<Route path={path} exact={exact} children={children} />)\r\n}\r\n\r\nexport default ProtectRoute","import React, { useEffect } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\n\r\nexport const Control = ({ name, storedData, label, required, register, placeholder, formState, setValue }: any) => {\r\n  const { errors } = formState\r\n  const error = (errors && errors[name])\r\n\r\n  useEffect(() => {\r\n    if (storedData && storedData[name]) setValue(name, storedData[name])\r\n  }, [storedData, setValue, name])\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <Form.Group controlId={`form-${name}`}>\r\n        <Form.Label>{label} {required && '*'}</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          {...register(name, { required })}\r\n\r\n          isInvalid={error}\r\n        /* isValid={dirty && !error} */\r\n        />\r\n\r\n        <FormControl.Feedback type=\"valid\">\r\n          Perfect!\r\n        </FormControl.Feedback>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Please provide a valid {label}.\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Control","\r\nimport React from \"react\";\r\n\r\nexport const Loading = ({what = ''}) => {\r\n    return (<div>{`Loading ${what}... `}</div>)\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Unauthorized = ({where = ''}) => {\r\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\r\n}\r\n\r\nexport default Unauthorized","import { useMutation, useQuery } from '@apollo/client'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\n\r\nexport const getDataFromRaw = (rawData) => {\r\n  const rawName = Object.keys(rawData)[0]\r\n  return rawData[rawName]\r\n}\r\n\r\nexport const Editor = ({ name, form, id, renameError, onUpdated, updateCache, query, children }: any) => {\r\n  const [localId, setLocalId] = useState(id !== 'create' ? id : undefined)\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [errors, setErrors] = useState([])\r\n\r\n  const [storedData, setStoredData] = useState({})\r\n\r\n  const handleError = (incommingError) => {\r\n    let incomingErrors = incommingError.message.split('\\n')\r\n    if (renameError) {\r\n      incomingErrors = incomingErrors.map((error) => renameError(error))\r\n    }\r\n    setErrors(incomingErrors)\r\n  }\r\n\r\n  const updateDataFromLoaded = (loadedDataRaw) => {\r\n    if (!loadedDataRaw) {\r\n      return\r\n    }\r\n\r\n    const loadedData = getDataFromRaw(loadedDataRaw)\r\n\r\n    if (loadedData) {\r\n      setStoredData({ ...loadedData })\r\n    } else {\r\n      setUnauthorized(true)\r\n    }\r\n  }\r\n\r\n  const onCompleted = (raw) => {\r\n    const data = getDataFromRaw(raw)\r\n    setLocalId(data.id)\r\n    setErrors(null)\r\n    if (onUpdated) onUpdated(raw)\r\n  }\r\n\r\n  const skipLoading = !localId\r\n  const { loading } = useQuery(query.QUERY, {\r\n    variables: { id: localId },\r\n    skip: skipLoading,\r\n    onCompleted: (loadedDataRaw) => {\r\n      updateDataFromLoaded(loadedDataRaw)\r\n    },\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [createProjectMutation] = useMutation(query.CREATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  const [updateProjectMutation] = useMutation(query.UPDATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  // const onSubmit = (data:any) => {\r\n  //   console.log(data)\r\n  // }\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      if (localId) {\r\n        setErrors(null)\r\n        updateProjectMutation({\r\n          variables: {\r\n            id: localId,\r\n            ...data,\r\n          },\r\n        })\r\n      } else {\r\n        createProjectMutation({\r\n          variables: {\r\n            userId: localStorage.getItem('user.id'),\r\n            ...data,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    [localId, createProjectMutation, updateProjectMutation],\r\n  )\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={`${name} edit`} />\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading what={name} />\r\n  }\r\n\r\n  return <div>{children(storedData, onSubmit, errors)}</div>\r\n}\r\n\r\nexport default Editor\r\n","import { loader } from \"graphql.macro\";\r\nimport React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Control from \"../../../components/Editor/Control\";\r\nimport Editor from \"../../../components/Editor/Editor\";\r\n\r\nconst CREATE_MUTATION = loader('./graphql/mutation-create-user-role.gql')\r\nconst UPDATE_MUTATION = loader('./graphql//mutation-update-user-role.gql')\r\nconst QUERY = loader('./graphql/query-user-role.gql')\r\n\r\nconst UserRoleForm = ({ storedData, onSubmit, userRoleId, graphQlError }: any) => {\r\n  const reactForm = useForm()\r\n  const { handleSubmit } = reactForm\r\n  return (<Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Control name={'name'} label={'Role name'} required={true} storedData={storedData} {...reactForm} />\r\n    <Button type=\"submit\">Save</Button>\r\n  </Form>)\r\n}\r\n\r\nexport const UserRoleEdit = (data) => {\r\n  const { id } = useParams()\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        id={id}\r\n        name={'UserRole'}\r\n        fields={['role']}\r\n        query={{\r\n          CREATE_MUTATION,\r\n          UPDATE_MUTATION,\r\n          QUERY\r\n        }}\r\n      >\r\n        {(storedData, onSubmit, errors) => <UserRoleForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} userRoleId={id} />}\r\n      </Editor>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRoleEdit","import React, { useCallback, useState } from 'react';\r\nimport { Dropdown, DropdownButton, Form, InputGroup } from \"react-bootstrap\";\r\nimport './FilterItem.css';\r\n\r\nconst basicOptionsName = {\r\n    contains: 'contains',\r\n    not_contains: 'not contains',\r\n    starts_with: 'starts with',\r\n    not_starts_with: 'not starts with',\r\n    ends_with: 'ends with',\r\n    not_ends_with: 'not ends with',\r\n    isEmpty: 'is empty',\r\n}\r\n\r\nexport const FilterItem = ({ fields, onChange }) => {\r\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\r\n    const [optionSelected, setOptionSelected] = useState('contains')\r\n    const [filterText, setFilterText] = useState('')\r\n    const [filter, setFilter] = useState<string | null>('null')\r\n\r\n    const onFieldChange = (field) => {\r\n        setFieldSelected(field)\r\n        processFilter(field, optionSelected, filterText)\r\n    }\r\n\r\n    const onOptionChange = (option) => {\r\n        setOptionSelected(option)\r\n        processFilter(fieldSelected, option, filterText)\r\n    }\r\n\r\n    const onFilterChange = (e) => {\r\n        const text = e.target.value\r\n        setFilterText(text)\r\n        processFilter(fieldSelected, optionSelected, text)\r\n    }\r\n\r\n    const doFilter = useCallback((f) => {\r\n        if (filter !== f) {\r\n            setFilter(f)\r\n            onChange(f)\r\n        }\r\n    }, [filter, onChange, setFilter])\r\n\r\n    const processFilter = useCallback((field, option, text) => {\r\n        if (!text && option !== 'isEmpty') {\r\n            doFilter(null)\r\n            return\r\n        }\r\n\r\n        const f = {}\r\n        f[`${field}_${option}`] = text\r\n        doFilter(f)\r\n\r\n    }, [doFilter])\r\n\r\n    const gc = (o) => {\r\n        const o2 = o\r\n        return () => {\r\n            onFieldChange(o2)\r\n        }\r\n    }\r\n\r\n    const go = (o) => {\r\n        const o2 = o\r\n        return () => { onOptionChange(o2); }\r\n    }\r\n\r\n\r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n                className=\"field-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"success\"\r\n                title={fieldSelected}\r\n                id=\"input-group-dropdown-0\" >\r\n                {fields.map((o) => (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <DropdownButton\r\n                className=\"select-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-link\"\r\n                title={basicOptionsName[optionSelected]}\r\n                id=\"input-group-dropdown-1\" >\r\n                {Object.getOwnPropertyNames(basicOptionsName).map((o) => (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o]}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <Form.Control value={filterText} onChange={onFilterChange} />\r\n        </InputGroup>)\r\n\r\n}\r\n\r\nexport default FilterItem","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\n\r\nexport const DeleteModal = ({ show, onHide, onDelete, modelName, deleteObject, deleting }) => {\r\n  const onDeleteAction = () => {\r\n    if (!deleting) {\r\n      onDelete(deleteObject)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton>\r\n          <div>\r\n            <Modal.Title>\r\n              Delete {'>>'} {deleteObject && deleteObject.name} {'<<'}\r\n            </Modal.Title>\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!deleting ? (\r\n            <p>\r\n              Are you sure, you want delete {modelName} item with name <b>'{deleteObject && deleteObject.name}'</b> and id <i>'{deleteObject && deleteObject.id}'</i>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Deleting {modelName} item with name '{deleteObject && deleteObject.name}' and id '{deleteObject && deleteObject.id}' ...\r\n            </p>\r\n          )}\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>\r\n            Delete\r\n          </Button>\r\n          <Button disabled={deleting} variant=\"primary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React from \"react\";\r\nimport './Row.css';\r\n\r\nconst getElementFromField = (item, field) => {\r\n  const fieldDesc = field\r\n\r\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field).split('.')\r\n  const element = item[names[0]]\r\n\r\n  return { element, name: names[0], names }\r\n}\r\n\r\nexport const ListRowItem = ({ item, field }) => {\r\n  const { element, name, names } = getElementFromField(item, field)\r\n\r\n  if (!element) {\r\n    return (<>ERR NOT EXIST:{name}</>)\r\n  }\r\n\r\n  if ((field).component) {\r\n    const component = (field ).component\r\n    return (<>{component && component({ value: element, names, item })}</>)\r\n  }\r\n\r\n  if (element.substr && element.length > 50) {\r\n    return (<>{element.substr(0, 47)}...</>)\r\n  }\r\n\r\n  if (element.push && element.reduce && names.length > 1) {\r\n    return (<>{(element).reduce((p, e) => p + e[names[1]], '')}</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {element}\r\n    </>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport './Row.css'\r\nimport { ListRowItem } from './RowItem'\r\n\r\nexport const ListRow = ({ item, onDelete, name, fields = ['id'], showDelete = false, onEdit, getEditLink }) => {\r\n  const doEdit = useCallback(() => {\r\n    if (onEdit) onEdit(item)\r\n  }, [item, onEdit])\r\n\r\n  const editLink = useMemo(() => {\r\n    if (getEditLink) return getEditLink(item)\r\n    else return `/user/${name.toLowerCase()}/${item.id}`\r\n  }, [name, item, getEditLink])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"id\">{onEdit ? <span role={'link'} tabIndex={0} onKeyPress={()=>{}} onClick={doEdit}>{item.id}</span> : <Link to={editLink}>{item.id}</Link>}</td>\r\n        {fields.map(\r\n          (field) =>\r\n            field !== 'id' && (\r\n              <td>\r\n                <ListRowItem item={item} field={field} />\r\n              </td>\r\n            ),\r\n        )}\r\n        {item.user && <td>{item.user.email}</td>}\r\n\r\n        {showDelete && (\r\n          <td className=\"right\">\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                onDelete(item)\r\n              }}\r\n            >\r\n              delete\r\n            </Button>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport React, { useState } from 'react'\r\nimport { Table as BTable } from 'react-bootstrap'\r\nimport DeleteModal from '../DeleteModal/DeleteModal'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\nimport { ListRow } from './Row'\r\n\r\nexport const Table = ({ filter, name, adminMode = false, queries, fields, onEdit, getEditLink }) => {\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [deleteObject, setDeleteObject] = useState(null)\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\r\n\r\n  const [data, setData] = useState([])\r\n  const [error, setError] = useState()\r\n\r\n  const { refetch: userRefetch, loading } = useQuery(adminMode ? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY, {\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      } else {\r\n        setError(e)\r\n      }\r\n    },\r\n    onCompleted: (d) => {\r\n      const dataFields = Object.getOwnPropertyNames(d)\r\n      if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\r\n        setData(d[dataFields[0]])\r\n      } else {\r\n        setData([])\r\n      }\r\n    },\r\n    variables: { filter },\r\n  })\r\n\r\n  const [deleteProjectMutation] = useMutation(queries.DELETE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: (data) => {\r\n      onHideDidaloDelete()\r\n      userRefetch()\r\n    },\r\n    onError: (e) => {\r\n      if (e.message === 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const onHideDidaloDelete = () => {\r\n    setShowDeleteDialog(false)\r\n    setDeleteObject(null)\r\n  }\r\n\r\n  const onDelete = (obj) => {\r\n    setDeletingOnDeleteDialog(false)\r\n    setShowDeleteDialog(true)\r\n    setDeleteObject(obj)\r\n  }\r\n\r\n  const doDelete = (deleteObject) => {\r\n    setDeletingOnDeleteDialog(true)\r\n    deleteProjectMutation({\r\n      variables: {\r\n        id: deleteObject.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={name} />\r\n  }\r\n  if (loading) return <Loading what={name} />\r\n\r\n  return (\r\n    <div>\r\n      {error && <div>{`Error! ${error.message}`}</div>}\r\n\r\n      <BTable responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            {fields?.map((f) => f !== 'id' && <th>{(f).name ? (f).name : f}</th>)}\r\n            {adminMode && <th>User</th>}\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length &&\r\n            data.map((projectItem) => (\r\n              <ListRow name={name} item={projectItem} onDelete={onDelete} fields={fields} showDelete={adminMode} onEdit={onEdit} getEditLink={getEditLink} />\r\n            ))}\r\n        </tbody>\r\n      </BTable>\r\n\r\n      <DeleteModal\r\n        show={showDeleteDialog}\r\n        onHide={onHideDidaloDelete}\r\n        onDelete={doDelete}\r\n        modelName={name}\r\n        deleteObject={deleteObject}\r\n        deleting={deletingOnDeleteDialog}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './FilteredList.css'\r\nimport FilterItem from './FilterItem'\r\nimport Table from './Table'\r\n\r\nconst createFilter = () => {\r\n  const obj = []\r\n  obj.name = 'AND'\r\n  return { AND: obj }\r\n}\r\n\r\nconst addAnd = (node, filter) => {\r\n  let obj = filter\r\n\r\n  if (node.name !== 'AND') {\r\n    obj = [obj]\r\n    obj.name = 'AND'\r\n  }\r\n\r\n  node.push(obj)\r\n}\r\n\r\nconst filterDestructNode = (node) => {\r\n  let filter = ''\r\n\r\n  for (const n of node) {\r\n    if (n.name && n.length > 0) {\r\n      filter += `,${filterDestructNode(n)}`\r\n    } else {\r\n      filter += `,{${n.filter}}`\r\n    }\r\n  }\r\n\r\n  return `{${node.name}:[${filter.substr(1)}]}`\r\n}\r\n\r\nconst filterDestruct = (filter) => {\r\n  const fo = {\r\n    filter: '',\r\n    params: '',\r\n  }\r\n\r\n  fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\r\n  fo.params = fo.params.length > 2 ? `(${fo.params.substr(1)})` : ''\r\n\r\n  return fo\r\n}\r\n\r\nexport const FilteredList = ({ name, userId, adminMode = false, queries, fields, filter: staticFilter, onCreate, onEdit, getEditLink }) => {\r\n  const [filter, setFilter] = useState(adminMode ? createFilter() : null)\r\n  const history = useHistory()\r\n\r\n  // console.log(filter, listFilter)\r\n  const createDefaultFilter = useCallback((userId?) => {\r\n    const defaultFilter = createFilter()\r\n\r\n    if (userId) {\r\n      addAnd(defaultFilter.AND, { user_every: { id: userId } })\r\n    }\r\n\r\n    if (staticFilter) {\r\n      addAnd(defaultFilter.AND, staticFilter)\r\n    }\r\n\r\n    return defaultFilter\r\n  }, [staticFilter])\r\n\r\n  const processFilter = (filter) => {\r\n    const filterDestructed = filterDestruct(filter)\r\n\r\n    console.log('processFilter', { filter, filterDestructed })\r\n\r\n    setFilter(filter)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const defaultFilter = createDefaultFilter(userId)\r\n    processFilter(defaultFilter)\r\n  }, [userId, createDefaultFilter])\r\n\r\n  const onFilterChange = useCallback(\r\n    (f) => {\r\n      const defaultFilter = createDefaultFilter(userId)\r\n\r\n      if (f) {\r\n        addAnd(defaultFilter.AND, f)\r\n      }\r\n\r\n      processFilter(defaultFilter)\r\n    },\r\n    [userId, createDefaultFilter],\r\n  )\r\n\r\n  const onCreateNew = () => {\r\n    if (onCreate) onCreate()\r\n    else history.push('/user/' + name.toLowerCase() + '/create')\r\n  }\r\n\r\n  // if is not adminMode,\r\n  // the useEffect will update filter with user after render\r\n  // but in render is already called the query\r\n  // but the query will call without properly setuped filter and return unauthorized\r\n  if (!adminMode && !filter) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"base-filtered-list\">\r\n      <section>\r\n        <h1>{name}</h1>\r\n        <div className=\"row-head\">\r\n          <FilterItem fields={fields} onChange={onFilterChange} />\r\n          <div></div>\r\n        </div>\r\n        <div className=\"row-table\">\r\n          <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} onEdit={onEdit} getEditLink={getEditLink} />\r\n          <Button onClick={onCreateNew}>Create New</Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteredList\r\n","import { loader } from \"graphql.macro\";\r\nimport React from \"react\";\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\n\r\nconst USER_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst ADMIN_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst DELETE_MUTATION = loader('./graphql/mutation-remove-user-role.gql')\r\n\r\nexport const UserRoleList = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Roles'}\r\n        fields={['name']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserRoleList","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { Dropdown, DropdownButton, Form } from \"react-bootstrap\";\r\n\r\nexport const ConnectBase = ({ value, names, gql, item }) => {\r\n  const element = value\r\n  const name = names.length > 1 && names[1]\r\n  const elementTitle = element.push && element.reduce && names.length > 1 ? (element).reduce((p, e) => p + `, ${e[name]}`, '').substr(2) : element\r\n\r\n  const [title, setTitle] = useState(elementTitle)\r\n  const [data, setData] = useState([])\r\n\r\n  useQuery(gql.QUERY, {\r\n    onCompleted: (iraw) => {\r\n\r\n      const dataFields = Object.getOwnPropertyNames(iraw)\r\n      if (dataFields.length > 0 && iraw[dataFields[0]].length > 0) {\r\n        const raw = iraw[dataFields[0]]\r\n\r\n        const final = raw.map((r) => ({\r\n          id: r.id,\r\n          checked: title.indexOf(r[name]) !== -1,\r\n          label: r[name]\r\n        }))\r\n\r\n        setData(final)\r\n      } else {\r\n        setData([])\r\n      }\r\n\r\n    },\r\n  });\r\n\r\n  const [addMutation] = useMutation(gql.ADD, { errorPolicy: \"none\" })\r\n\r\n  const [removeMutation] = useMutation(gql.REMOVE, { errorPolicy: \"none\" })\r\n\r\n  const onChecked = (value) => {\r\n    const updated = data.map((d) => {\r\n      if (d.label === value.label) {\r\n        d.checked = !d.checked\r\n      }\r\n      return { ...d }\r\n    })\r\n\r\n    const updateTitle = (updated).reduce((p, e) => {\r\n      if (e.checked) return `${p}, ${e.label}`\r\n      else return p\r\n    }, '').substr(1)\r\n\r\n    if (value.checked) {\r\n      addMutation({\r\n        variables: {\r\n          id1: value.id,\r\n          id2: item.id\r\n        }\r\n      });\r\n    } else {\r\n      removeMutation({\r\n        variables: {\r\n          id1: value.id,\r\n          id2: item.id\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    setData(updated)\r\n    setTitle(updateTitle)\r\n  }\r\n\r\n  // if(element.push && element.reduce && names.length > 1) {\r\n  //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n  // }\r\n\r\n  return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\r\n    {data && data.map((d) => (\r\n      <Dropdown.Item onClick={(e) => onChecked(d)} >\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label={d.label}\r\n          checked={d.checked} />\r\n      </Dropdown.Item>))\r\n    }\r\n  </DropdownButton>)\r\n}\r\n\r\nexport default ConnectBase","import React from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport ConnectBase from \"../../../components/List/ConnectBase\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst QUERY_ALL_USERS_ADMIN = loader('./graphql/query-all-user-admin.gql')\r\nconst USER_ROLE_QUERY = loader('./graphql/query-all-user-role.gql')\r\nconst MUTATION_ADD_USER_ROLE_TO_USER = loader('./graphql/mutation-add-user-role-to-user.gql')\r\nconst MUTATION_REMOVE_USER_ROLE_FROM_USER = loader('./graphql/mutation-remove-user-role-from-user.gql')\r\nconst MUTATION_REMOVE_USER = loader('./graphql/mutation-remove-user.gql')\r\nconst USER_LIST_QUERY = gql`\r\n{allUser{id}}`;\r\n\r\nconst ConnectRole: React.FC<{ value: any, names?: any, item: any }> = ({ value, names, item }) => {\r\n\r\n  const gql = {\r\n    QUERY: USER_ROLE_QUERY,\r\n    ADD: MUTATION_ADD_USER_ROLE_TO_USER,\r\n    REMOVE: MUTATION_REMOVE_USER_ROLE_FROM_USER\r\n  }\r\n\r\n  return <ConnectBase value={value} names={names} gql={gql} item={item} />\r\n}\r\n\r\nexport const UsersList = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Users'}\r\n        fields={['email', 'password', { name: 'roles.name', component: ConnectRole }, 'roles.id']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY: QUERY_ALL_USERS_ADMIN, DELETE_MUTATION: MUTATION_REMOVE_USER }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\r\n        <h1>My Facebook</h1>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios'\r\nexport const getGraphqlMonsterClientAppRoot = () => process.env.REACT_APP_HOST?.substr(0,process.env.REACT_APP_HOST?.length - 8)\r\n\r\nexport const isEmailValid = (email) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\n\r\nexport const passwordStrong = (password) => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        }\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         }\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    }\r\n    \r\n}\r\n\r\nexport const uploadFile = (name='files') => async (file, callback = undefined) => {\r\n  const userToken = localStorage.getItem('user.token')\r\n  const data = new FormData()\r\n  data.append('file', file)\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const event = await axios.post(`${getGraphqlMonsterClientAppRoot()}/upload`, data, {\r\n        // authorization: Bearer\r\n        headers: {\r\n          Authorization: `Bearer ${userToken}`,\r\n        },\r\n      })\r\n\r\n      if(callback){\r\n        callback(null, event.data)\r\n      }\r\n      resolve(event.data)\r\n    } catch(ex) {\r\n      let error = ex\r\n      if(ex.response?.data?.error?.message){\r\n        error = ex.response?.data.error\r\n      }\r\n\r\n      if(error.message === \"Network Error\"){\r\n        error.message = 'File is too large (max file size is 1Mb)'\r\n      }\r\n\r\n      if(callback){\r\n        callback(error, null)\r\n      }\r\n      reject(error)\r\n    }\r\n    \r\n  })\r\n}","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from \"graphql.macro\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { isEmailValid } from \"../../../app/utils\";\r\n\r\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = loader('./graphql/forgotten-password-request.gql');\r\n\r\nexport const ForgottenPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const [doForgottenPassword, { loading, data, }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const onRequestSend = async () => {\r\n    setEmailSent(false)\r\n    if (email && isEmailValid(email)) {\r\n      setInvalidEmail(false)\r\n      try {\r\n        await doForgottenPassword({ variables: { email } })\r\n        setEmailSent(true)\r\n      } catch (ex) {\r\n        console.log('onError', data)\r\n        setInvalidEmail(true)\r\n      }\r\n    } else {\r\n      setInvalidEmail(true)\r\n    }\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n  };\r\n\r\n  if (emailSent) {\r\n    return (\r\n      <>\r\n        <Alert variant={\"success\"}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>Forgotten Password</h1>\r\n                  <p>Shortly You will be back</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>Send Recovery Link</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React from 'react'\r\nimport { Form, ProgressBar } from 'react-bootstrap'\r\n\r\nexport const PasswordComponent = ({onPasswordChange, password, strongPassword}) => (\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            isInvalid={!strongPassword.valid}\r\n        />\r\n        <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\r\n        <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant}/>\r\n    </Form.Group>\r\n)\r\n\r\nexport default PasswordComponent","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from \"graphql.macro\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { changeState, login } from \"../../../app/reducers/userSlice\";\r\nimport { isPasswordValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nexport const FORGOTTEN_PASSWORD_CHECK_MUTATION = loader('./graphql/forgotten-password-check.gql')\r\nexport const FORGOTTEN_PASSWORD_RESET_MUTATION = loader('./graphql/forgotten-password-reset.gql')\r\n\r\n\r\nexport const ForgotenPasswordReset  = ({ match }) => {\r\n  const token = _.get(match, 'params.token')\r\n  const [password, setPassword] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck }] = useMutation(FORGOTTEN_PASSWORD_CHECK_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPasswordReset, { loading, data }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n\r\n  const { 1: setInvalidPass } = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const doCheck = async () => {\r\n      try {\r\n        await doForgottenPasswordCheck({ variables: { token } })\r\n      } catch (ex) {\r\n\r\n      } finally {\r\n      }\r\n\r\n    }\r\n\r\n    doCheck()\r\n\r\n  }, [token, doForgottenPasswordCheck])\r\n\r\n  const onReset = async () => {\r\n    if (!strong.valid) {\r\n      return\r\n    }\r\n\r\n    if (password !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\r\n      dispatch(login(data.reset))\r\n      history.replace('/user/projects')\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n\r\n    }\r\n\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    const pass = event.target.value\r\n    setPassword(pass);\r\n    const valid = isPasswordValid(pass)\r\n    setInvalidPass(!valid);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidPass(false)\r\n\r\n    if (c === password) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  if (loadingForgottenPasswordCheck) {\r\n    return (<Alert variant={\"success\"}>Checking token</Alert>)\r\n  } else if (dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\r\n    return (<>\r\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1>User Password Reset</h1>\r\n                    <p>You will be back soon</p>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n                <Form>\r\n                  {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\r\n                  {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                  <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Re-Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      onChange={onCopyChange}\r\n                      value={copy}\r\n                      isInvalid={invalidCopy}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n\r\n                <div id='submit' className=\"pull-left\">\r\n                  {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>Reset password</Button>}\r\n                  {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                  <div className=\"clearfix\"></div>\r\n\r\n\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    );\r\n  } else {\r\n    return (<Alert variant={\"danger\"}>The <b>{token}</b> is not valid or already used</Alert>)\r\n  }\r\n\r\n\r\n};\r\n\r\nexport default ForgotenPasswordReset;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch();\r\nexport const useAppSelector = useSelector;\r\n","\r\n\r\nexport const isEmailValid = (email) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\n\r\nexport const passwordStrong = (password) => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } \r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } \r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } \r\n    \r\n}","import { useMutation } from '@apollo/client';\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../app/hooks';\r\nimport { changeState, login} from '../../../app/reducers/userSlice';\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils';\r\nimport { isEmailValid } from './utils';\r\n\r\nexport const LOGIN_QL = loader('./graphql/login.gql')\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState(localStorage.getItem('user.email') || '')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false)\r\n    const [invalidPass, setInvalidPass] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(history.location.search)\r\n    const path = query.get('path')\r\n    const role = query.get('role')\r\n    const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n    const dispatch = useAppDispatch();\r\n    const [loginMutation, { loading }] = useMutation(LOGIN_QL, { errorPolicy: 'none' });\r\n\r\n    const onLogin = async () => {\r\n        if (!isEmailValid(email)) {\r\n            return setInvalidEmail(true)\r\n        }\r\n\r\n        try {\r\n            dispatch(changeState('processing'))\r\n            const { data } = await loginMutation({ variables: { email, pass } })\r\n            const userToken = data.login_v1\r\n\r\n            dispatch(login(userToken))\r\n            // go to path in case user want to reach some page before login\r\n            // or go to default path\r\n            history.replace(path || defaultPath)\r\n        } catch (e) {\r\n            setInvalidEmail(true)\r\n            setInvalidPass(true)\r\n            setPass('')\r\n        }\r\n    }\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPass(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onBackClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (<>\r\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                                <div className=\"col-md-12 text-center\">\r\n                                    <h1>User Login</h1>\r\n                                    <p>We was missed you already</p>\r\n                                    {role && <Alert variant={'warning'}>You trying to reach part what is under registered user with <b>{role}</b> role protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                    {(!role && path) && <Alert variant={'warning'}>You trying to reach part what is under registered user protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                </div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Form name=\"contactForm\" id='contact_form' className=\"form-border\" >\r\n                            {!invalidPass && <h3>Login to your account</h3>}\r\n                            {invalidPass && <Alert variant={'danger'}>Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?</Alert>}\r\n                            {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your password with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <div id='submit' className=\"pull-left\">\r\n                                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>Login</Button>}\r\n                                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n                                <div className=\"clearfix\"></div>\r\n\r\n                                <div className=\"spacer-single\"></div>\r\n\r\n                                <ul className=\"list s3\">\r\n                                    <li>Or login with:</li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/github`}>GitHub</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/facebook`}>Facebook</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/google`}>Google</a></li>\r\n                                </ul>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>)\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\nimport _ from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useAppDispatch } from '../../../app/hooks'\r\nimport { login } from '../../../app/reducers/userSlice'\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils'\r\n\r\nexport const tokenFromFacebookCode = async (type, code) => {\r\n    return axios.get(`${getGraphqlMonsterClientAppRoot()}/auth/${type}/callback?code=${code}`)\r\n}\r\n\r\nexport const PassportCallback = ({ type }) => {\r\n    const location = useLocation()\r\n    const codeRaw = _.get(location, 'search', '').split('?code=')\r\n    const code = codeRaw.length > 1 ? codeRaw[1] : ''\r\n\r\n\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [error, setError] = useState()\r\n\r\n    const showError = (errorMessage) => {\r\n        setError(errorMessage)\r\n        setTimeout(() => {\r\n            history.replace('/login')\r\n        }, 4000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const request = async () => {\r\n            try {\r\n                const data = await tokenFromFacebookCode(type, code)\r\n                dispatch(login(data))\r\n                history.replace('/user/projects')\r\n            } catch (ex) {\r\n                const response = JSON.parse(_.get(ex, 'request.response', '{}'))\r\n                showError(response.error?.message || ex.message)\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (code) request()\r\n        else showError('User denied')\r\n    })\r\n\r\n    return (<>\r\n        {error && <Alert variant={'danger'}>{type} login isn't work due \"{error}\" You will be redirect back to <Link to=\"/login\">Login</Link></Alert>}\r\n    </>)\r\n}\r\n","import { useMutation } from \"@apollo/client\";\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from \"../../../app/hooks\";\r\nimport { changeState, login } from \"../../../app/reducers/userSlice\";\r\nimport { isEmailValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nexport const REGISTER_MUTATION = loader('./graphql/register.gql')\r\n\r\nexport const Register = () => {\r\n  const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [registerMutation, { loading, data }] = useMutation(REGISTER_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  const onRegister = async () => {\r\n    if (!isEmailValid(email)) {\r\n      return setInvalidEmail(true)\r\n    }\r\n\r\n    if (pass !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await registerMutation({ variables: { email, pass } })\r\n      const userToken = data.register_v1\r\n\r\n      dispatch(login(userToken))\r\n\r\n      history.replace(defaultPath)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n      setEmailProbablyTaken(true)\r\n    }\r\n\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n    setEmailProbablyTaken(false)\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    const pass = event.target.value\r\n\r\n    setPass(pass);\r\n    setInvalidEmail(false);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidEmail(false)\r\n\r\n    if (c === pass) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>User Registration</h1>\r\n                  <p>All big things starting here</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                {emailProbablyTaken && (<Alert variant={\"danger\"}>Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?</Alert>)}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Re-Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    onChange={onCopyChange}\r\n                    value={copy}\r\n                    isInvalid={invalidCopy}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>Register</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                {/* <ul className=\"list s3\">\r\n                  <li>Or login with:</li>\r\n                  <li><a href=\"#\">Facebook</a></li>\r\n                  <li><a href=\"#\">Google</a></li>\r\n                  <li><a href=\"#\">Instagram</a></li>\r\n                </ul> */}\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport * as _ from 'lodash';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from \"../../../app/reducers/userSlice\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($verifyToken: String!) {\r\n    verifyEmail_v1(verifyToken: $verifyToken) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VerifyUser = ({ match }) => {\r\n  const verifyToken = _.get(match, 'params.verifyToken')\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const doVerifyUser = async () => {\r\n    try {\r\n      const { data } = await verify({ variables: { verifyToken } })\r\n      dispatch(login(data.verifyEmail_v1))\r\n      setVerified(true)\r\n      localStorage.setItem('user.verifyToken', verifyToken)\r\n      setTimeout(() => {\r\n        history.replace('/user/projects')\r\n      }, 2000)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n    }\r\n\r\n  };\r\n\r\n  const onVerifyUser = () => {\r\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\r\n    const userVerified = localStorage.getItem('user.verified') === 'true'\r\n\r\n    // user probably comming with the same link\r\n    // what was for his first verified\r\n    if (userVerified && previouslyVerified === verifyToken) {\r\n      history.replace('/user/projects')\r\n    } else {\r\n      doVerifyUser()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (verifyToken) {\r\n      onVerifyUser()\r\n    }\r\n  })\r\n\r\n\r\n  return (<section>\r\n    <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-md-2\">\r\n            {verified ? (<div className=\"alert alert-success\" role=\"alert\">Your account was verified <Button>Start creating</Button></div>) : null}\r\n            {verifying ? (<div className=\"alert alert-dark\" role=\"alert\">Your accont is verifing...</div>) : null}\r\n            {!verifyToken || verifiedError ? (<div className=\"alert alert-dark\" role=\"alert\">The code is invalid or already applyed</div>) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>)\r\n};\r\n\r\nexport default VerifyUser;\r\n","import React from 'react'\r\n\r\nexport function UserDashboard() {\r\n    return (\r\n      <div>\r\n        <h2>User Dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  export default UserDashboard","import React, {useState} from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { gql } from 'graphql.macro'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../app/reducers/userSlice';\nimport './Posts.css'\n\nconst CREATE_MUTATION = gql`\n    mutation CreatePost($title: String, $color:String) {\n    createPost(title: $title, color: $color) {\n        id\n        title,\n        color\n    }\n}`\n\nconst ALL_POST_QUERY = gql`query AllPost($orderBy: PostOrderBy, $filter: PostFilter){\n    allPost(orderBy: $orderBy, filter:$filter){\n        id,\n        title,\n        color\n    }\n  }`\n\nconst Posts = () => {\n    const user = useSelector(selectUser)\n    // const [currentValue, setCurrentValue] = useState(intialValue)\n    const [posts, setPosts] = useState([\n    ])\n\n    const [newPostTitle, setNewPostTitle] = useState(\"I'm feeling pretty good\")\n    const [newPostColor, setNewPostColor] = useState('#0000ff')\n    const [createPost, { error: createError }] = useMutation(CREATE_MUTATION)\n\n    const { loading } = useQuery(ALL_POST_QUERY, {\n        onCompleted: (data) => {\n            setPosts([...data.allPost])\n        }, variables : {\n            orderBy: 'createdAt_desc',\n            filter: {\n                user_every: {\n                    id: user?.id\n                }\n            }\n        }\n    })\n\n    const onAddPost = () => {\n        if(newPostTitle.length > 2){\n            const newPost = {title: newPostTitle, color: newPostColor}\n            setPosts([newPost, ...posts])\n            setNewPostTitle('')\n            createPost({variables: newPost})\n            console.log('Add Post Click', posts)\n        }\n    }\n\n    const onTitleChanged = (event) => {\n        console.log(event.target.value)\n        setNewPostTitle(event.target.value)\n    }\n\n    const onColorChange = (event) => {\n        console.log('onColorChange', event.target.value)\n        setNewPostColor(event.target.value)\n    }\n\n    return (\n        <>\n            <h1 className=\"posts-title\">Posts</h1>\n            <Form className=\"post-form\">\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>How do you feel today</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} value={newPostTitle} onChange={onTitleChanged} />\n            </Form.Group>\n            <div className=\"button-and-color\">\n                <Button variant=\"primary\" onClick={onAddPost}>Add Post</Button>\n                <div className=\"color-picker\"> \n                    <Form.Control\n                        type=\"color\"\n                        id=\"exampleColorInput\"\n                        defaultValue=\"#563d7c\"\n                        title=\"Choose your color\"\n                        onChange={onColorChange}\n                    />\n                </div>\n            </div>\n            \n            </Form>\n            <div className=\"posts-list\">\n                \n                {posts.map((currentPost, index)=><div key={index}><PostItem post={currentPost} /></div>)}\n            </div>\n        </>\n    )\n}\n\nconst PostItem = ({post}) => {\n    return (\n        <div className=\"post-item\" style={{backgroundColor:post.color}}>{post.title}</div>\n    )\n}\n\nexport default Posts","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\r\nimport UserRoleEdit from \"./pages/admin/UserRoles/UserRolesEdit\";\r\nimport UserRolesList from \"./pages/admin/UserRoles/UserRolesList\";\r\nimport UsersList from \"./pages/admin/Users/UsersList\";\r\nimport Home from \"./pages/public/Home/Home\";\r\nimport ForgottenPassword from \"./pages/public/Login/ForgottenPassword\";\r\nimport ForgottenPasswordReset from \"./pages/public/Login/ForgottenPasswordReset\";\r\nimport Login from \"./pages/public/Login/Login\";\r\nimport { PassportCallback } from \"./pages/public/Login/PassportCallback\";\r\nimport Register from \"./pages/public/Login/Register\";\r\nimport VerifyUser from \"./pages/public/Login/VerifyUser\";\r\nimport UserDashboard from \"./pages/user/UserDashboard/UserDashboard\";\r\nimport Posts from \"./pages/public/Posts/Posts\"\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/*\r\n              A <Switch> looks through all its children <Route>\r\n              elements and renders the first one whose path\r\n              matches the current URL. Use a <Switch> any time\r\n              you have multiple routes, but you want only one\r\n              of them to render at a time\r\n            */}\r\n      <Switch>\r\n      <ProtectedRoute exact path=\"/posts\">\r\n          <Posts />\r\n        </ProtectedRoute>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/login/facebook\">\r\n          <PassportCallback type={\"facebook\"} />\r\n        </Route>\r\n        <Route path=\"/login/github\">\r\n          <PassportCallback type={\"github\"} />\r\n        </Route>\r\n        <Route path=\"/login/google\">\r\n          <PassportCallback type={\"google\"} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n\r\n        <Route\r\n          path=\"/forgotten-password/:token\"\r\n          component={ForgottenPasswordReset}\r\n        />\r\n        <Route exact path=\"/forgotten-password\">\r\n          <ForgottenPassword />\r\n        </Route>\r\n\r\n        <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\r\n\r\n        <ProtectedRoute path=\"/user/dashboard\">\r\n          <UserDashboard />\r\n        </ProtectedRoute>\r\n        <Route path=\"/user/info\">{/* <UserInfo /> */}</Route>\r\n\r\n        <ProtectedRoute path=\"/admin/users\" role={\"admin\"}>\r\n          <UsersList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/admin/roles\" role={\"admin\"}>\r\n          <UserRolesList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute\r\n          path=\"/user/roles/:id\"\r\n          role={\"admin\"}\r\n          children={<UserRoleEdit />}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './reducers/userSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n})\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\n\r\n\r\nexport function register(config?) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config?) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config?) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const refreshToken = async () => {\r\n    const userId = localStorage.getItem('user.id')\r\n    const token = localStorage.getItem('user.token')\r\n    const refreshToken = localStorage.getItem('user.refreshToken')\r\n    return axios.post(process.env.REACT_APP_HOST || '', {\r\n        query: `\r\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\r\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\r\n                    token,\r\n                    refreshToken\r\n                }\r\n            }\r\n        `,\r\n        variables: {\r\n            userId,\r\n            token,\r\n            refreshToken\r\n        }\r\n    })\r\n}","import { ApolloClient, InMemoryCache, createHttpLink, ApolloLink, fromPromise } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { onError } from '@apollo/client/link/error'\r\nimport { refreshToken } from './refreshToken'\r\nimport { RetryLink } from '@apollo/client/link/retry'\r\n\r\nconst retryLink = new RetryLink({\r\n  attempts: (count, operation, error) => {\r\n    return true\r\n  },\r\n  delay: (count, operation, error) => {\r\n    return count * 1000 * Math.random()\r\n  },\r\n})\r\n\r\nlet isRefreshing = false\r\nlet pendingRequests = []\r\n\r\nconst resolvePendingRequests = () => {\r\n  //@ts-ignore\r\n  pendingRequests.map((callback) => callback())\r\n  pendingRequests = []\r\n}\r\n\r\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\r\nconst refreshTokenAction = (forward, operation) => {\r\n  // error code is set to UNAUTHENTICATED\r\n  // when AuthenticationError thrown in resolver\r\n  let forward$\r\n\r\n  if (!isRefreshing) {\r\n    isRefreshing = true\r\n    forward$ = fromPromise(\r\n      refreshToken()\r\n        // @ts-ignore\r\n        .then(({ data }) => {\r\n          const {\r\n            data: { refreshToken_v1 },\r\n          } = data\r\n          localStorage.setItem('user.token', refreshToken_v1.token)\r\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\r\n\r\n          // Store the new tokens for your auth link\r\n          resolvePendingRequests()\r\n          const oldHeaders = operation.getContext().headers\r\n          // modify the operation context with a new token\r\n          operation.setContext({\r\n            headers: {\r\n              ...oldHeaders,\r\n              authorization: `Bearer ${refreshToken_v1.token}`,\r\n            },\r\n          })\r\n          return forward(operation)\r\n        })\r\n        .catch((error) => {\r\n          pendingRequests = []\r\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\r\n          return\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false\r\n        }),\r\n    ).filter((value) => Boolean(value))\r\n  } else {\r\n    // Will only emit once the Promise is resolved\r\n    forward$ = fromPromise(\r\n      new Promise((resolve) => {\r\n        // @ts-ignore\r\n        pendingRequests.push(() => resolve())\r\n      }),\r\n    )\r\n  }\r\n\r\n  // @ts-ignore\r\n  return forward$.flatMap(() => {\r\n    return forward(operation)\r\n  })\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('user.token')\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  }\r\n})\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.REACT_APP_HOST,\r\n})\r\n\r\n// @ts-ignore\r\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\r\n  if (graphQLErrors){\r\n    if(graphQLErrors.some((error) => error.tokenExpired)) {\r\n      return refreshTokenAction(forward, operation)\r\n    }\r\n    graphQLErrors.map(({ message, locations, path }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`))\r\n  }\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`)\r\n})\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'none',\r\n    },\r\n    query: {\r\n      errorPolicy: 'none',\r\n    },\r\n    mutate: {\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n\r\nexport default apolloClient\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport apolloClient from \"./app/apolloClient\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}